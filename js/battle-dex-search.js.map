{"version":3,"file":"battle-dex-search.js","names":["DexSearch","searchType","arguments","length","undefined","formatid","species","query","dex","Dex","typedSearch","results","exactMatch","firstPokemonColumn","sortCol","reverseSort","filters","setType","window","room","curTeam","mod","_proto","prototype","getTypedSearch","format","speciesOrSet","BattlePokemonSearch","BattleItemSearch","BattleMoveSearch","BattleAbilitySearch","BattleTypeSearch","BattleCategorySearch","find","toID","_this$typedSearch","getResults","textSearch","_this$typedSearch2","addFilter","entry","type","includes","_i2","_this$filters2","filter","push","removeFilter","filterid","join","deleted","i","splice","pop","toggleSort","filterLabel","filterType","illegalLabel","id","_this$typedSearch3","illegalReasons","getTier","_this$typedSearch4","_this$typedSearch5","_this$typedSearch6","searchTypeIndex","typeTable","qFilterType","slice","BattleTypeChart","getClosest","BattleSearchIndex","passType","searchPasses","queryAlias","BattleAliases","aliasPassType","unshift","substr","matchLength","matchQuery","bufs","topbufIndex","count","nearMatch","instafilter","instafilterSort","illegal","searchPass","shift","typeIndex","gen","startsWith","matchStart","matchEnd","originalIndex","BattleSearchIndexOffset","charCodeAt","table","BattleTeambuilderTable","BattlePokedex","exists","overrideDexInfo","BattleItems","overrideItemInfo","BattleMovedex","overrideMoveInfo","BattleAbilities","overrideAbilityDesc","replace","charAt","toUpperCase","overrideTypeChart","typeName","curBufLength","topbuf","concat","Array","apply","fType","fId","_this$typedSearch7","buf","illegalBuf","pokedex","moveDex","types","abilities","category","Object","assign","get","ability","name","hasAbility","left","right","mid","Math","floor","pokemon","tier","move","item","egggroup","article","BattleTypedSearch","modFormat","set","formatType","baseResults","baseIllegalResults","sortRow","ClientMods","ModConfig","Number","forGen","overrideFormat","modFormatType","modid","formats","formatTable","teambuilderFormat","endsWith","_proto2","_this","getDefaultResults","call","getBaseResults","legalityFilter","_i4","_this$baseResults2","_ref","resultType","value","getTable","illegalResults","_i6","_this$baseResults4","result","_i8","_this$baseIllegalResu2","_ref2","rowType","sort","_ref3","firstLearnsetid","speciesid","_this$formatType","learnsets","baseLearnsetid","baseSpecies","battleOnly","nextLearnsetid","learnsetid","lsetSpecies","next","changesFrom","prevo","canLearn","moveid","moves","isNonstandard","genChar","_this$formatType2","learnset","overrideLearnsets","learnedMove","tradebacksMod","num","String","modFormatTable","gameType","doubles","tableKey","overrideTier","_BattleTypedSearch","_inheritsLoose","_this2","_len","args","_key","_proto3","_this$formatType3","_this$formatType4","_this$formatType5","_this$formatType6","_this$formatType7","isVGCOrBS","isHackmons","isDoublesOrBS","tierSet","tiers","map","r","slices","formatSlices","Uber","Regular","OU","UU","RU","NU","PU","ZU","LC","AG","DUber","DOU","DUU","DNU","zuBans","_ref4","monotypeBans","_ref5","customTierSet","customTiers","bans","_ref6","banned","unbans","_ref7","unbanned","headerCount","lastHeader","emptyHeaders","_ref8","test","_ref9","row","_i10","_ref10","eggGroups","_this3","sortOrder","_ref11","_ref12","rowType1","id1","rowType2","id2","pokedex1","pokedex2","baseStats","stat1","stat2","_ref13","_ref14","base1","base2","bst1","hp","atk","def","spa","spd","spe","bst2","_ref15","_ref16","name1","name2","Error","_BattleTypedSearch2","_proto4","fullAbilityName","isAAA","abilitySet","isMega","goodAbilities","poorAbilities","badAbilities","_i12","_abilities$sort$map2","abil","rating","_i14","_ref17","_BattleTypedSearch3","_proto5","_this$formatType8","itemSet","items","speciesSpecific","_item$itemUser","_species$tags","itemUser","tags","_i16","_ref18","_BattleTypedSearch4","_this4","_len2","_key2","_proto6","moveIsNotUseless","_moveData$flags","_moveData$flags2","_moveData$flags3","abilityid","itemid","viable","weightkg","evos","GOOD_DOUBLES_MOVES","moveData","GOOD_STATUS_MOVES","flags","charge","recharge","slicing","basePower","GOOD_WEAK_MOVES","BAD_STRONG_MOVES","_window$ModConfig$thi","_this$formatType9","_this$formatType10","_this$formatType11","isSTABmons","isTradebacks","regionBornLegality","isHoennGaiden","hasOwnUsefulCheck","usefulCheck","JSON","parse","checkParameters","substring","indexOf","split","_construct","Function","sketchMoves","sketch","lsetTable","_this$formatType12","_BattleTeambuilderTab","_this$formatType13","_BattleTeambuilderTab2","learnsetEntry","minGenCode","nonstandardMoves","noSketch","isMax","isZ","speciesTypes","moveTypes","genDex","prevoSpecies","excludedForme","s","forme","otherFormes","_i18","_baseSpecies$otherFor2","formeName","valid","_i20","usableMoves","uselessMoves","_i22","_moves2","isUsable","modIsUsable","_i24","_i26","_ref19","_this5","powerTable","frustration","spitup","trumpcard","naturalgift","grassknot","lowkick","gyroball","electroball","flail","reversal","present","wringout","crushgrip","heatcrash","heavyslam","fling","magnitude","beatup","punishment","psywave","nightshade","seismictoss","dragonrage","sonicboom","superfang","endeavor","sheercold","fissure","horndrill","guillotine","_ref20","_ref21","move1","move2","pow1","pow2","_ref22","_ref23","accuracy1","accuracy","accuracy2","_ref24","_ref25","pp1","pp","pp2","_ref26","_ref27","_BattleTypedSearch5","_proto7","physical","special","status","_BattleTypedSearch6","_proto8"],"sources":["../src/battle-dex-search.ts"],"sourcesContent":["/**\r\n * Search\r\n *\r\n * Code for searching for dex information, used by the Dex and\r\n * Teambuilder.\r\n *\r\n * Dependencies: battledata, search-index\r\n * Optional dependencies: pokedex, moves, items, abilities\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license MIT\r\n */\r\n\r\ntype SearchType = (\r\n\t'pokemon' | 'type' | 'tier' | 'move' | 'item' | 'ability' | 'egggroup' | 'category' | 'article'\r\n);\r\n\r\ntype SearchRow = (\r\n\t[SearchType, ID, number?, number?] | ['sortpokemon' | 'sortmove', ''] | ['header' | 'html', string]\r\n);\r\n\r\ntype SearchFilter = [string, string];\r\n\r\n/** ID, SearchType, index (if alias), offset (if offset alias) */\r\ndeclare const BattleSearchIndex: [ID, SearchType, number?, number?][];\r\ndeclare const BattleSearchIndexOffset: any;\r\ndeclare const BattleTeambuilderTable: any;\r\n\r\n\r\n/**\r\n * Backend for search UIs.\r\n */\r\nclass DexSearch {\r\n\tquery = '';\r\n\r\n\t/**\r\n\t * Dex for the mod/generation to search.\r\n\t */\r\n\tdex: ModdedDex = Dex;\r\n\r\n\ttypedSearch: BattleTypedSearch<SearchType> | null = null;\r\n\r\n\tresults: SearchRow[] | null = null;\r\n\texactMatch = false;\r\n\r\n\tstatic typeTable = {\r\n\t\tpokemon: 1,\r\n\t\ttype: 2,\r\n\t\ttier: 3,\r\n\t\tmove: 4,\r\n\t\titem: 5,\r\n\t\tability: 6,\r\n\t\tegggroup: 7,\r\n\t\tcategory: 8,\r\n\t\tarticle: 9,\r\n\t};\r\n\tstatic typeName = {\r\n\t\tpokemon: 'Pok&eacute;mon',\r\n\t\ttype: 'Type',\r\n\t\ttier: 'Tiers',\r\n\t\tmove: 'Moves',\r\n\t\titem: 'Items',\r\n\t\tability: 'Abilities',\r\n\t\tegggroup: 'Egg group',\r\n\t\tcategory: 'Category',\r\n\t\tarticle: 'Article',\r\n\t};\r\n\tfirstPokemonColumn: 'Tier' | 'Number' = 'Number';\r\n\r\n\t/**\r\n\t * Column to sort by. Default is `null`, a smart sort determined by how good\r\n\t * things are according to the base filters, falling back to dex number (for\r\n\t * Pokemon) and name (for everything else).\r\n\t */\r\n\tsortCol: string | null = null;\r\n\treverseSort = false;\r\n\r\n\t/**\r\n\t * Filters for the search result. Does not include the two base filters\r\n\t * (format and species).\r\n\t */\r\n\tfilters: SearchFilter[] | null = null;\r\n\r\n\r\n\tconstructor(searchType: SearchType | '' = '', formatid = '' as ID, species = '' as ID) {\r\n\t\tthis.setType(searchType, formatid, species);\r\n\t\tif (window.room.curTeam.mod) this.dex = Dex.mod(window.room.curTeam.mod);\r\n\r\n\t}\r\n\r\n\tgetTypedSearch(searchType: SearchType | '', format = '' as ID, speciesOrSet: ID | PokemonSet = '' as ID) {\r\n\t\tif (!searchType) return null;\r\n\t\tswitch (searchType) {\r\n\t\tcase 'pokemon': return new BattlePokemonSearch('pokemon', format, speciesOrSet);\r\n\t\tcase 'item': return new BattleItemSearch('item', format, speciesOrSet);\r\n\t\tcase 'move': return new BattleMoveSearch('move', format, speciesOrSet);\r\n\t\tcase 'ability': return new BattleAbilitySearch('ability', format, speciesOrSet);\r\n\t\tcase 'type': return new BattleTypeSearch('type', format, speciesOrSet);\r\n\t\tcase 'category': return new BattleCategorySearch('category', format, speciesOrSet);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfind(query: string) {\r\n\t\tquery = toID(query);\r\n\t\tif (this.query === query && this.results) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.query = query;\r\n\t\tif (!query) {\r\n\t\t\tthis.results = this.typedSearch?.getResults(this.filters, this.sortCol, this.reverseSort) || [];\r\n\t\t} else {\r\n\t\t\tthis.results = this.textSearch(query);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tsetType(searchType: SearchType | '', format = '' as ID, speciesOrSet: ID | PokemonSet = '' as ID) {\r\n\t\t// invalidate caches\r\n\t\tthis.results = null;\r\n\r\n\t\tif (searchType !== this.typedSearch?.searchType) {\r\n\t\t\tthis.filters = null;\r\n\t\t\tthis.sortCol = null;\r\n\t\t}\r\n\t\tthis.typedSearch = this.getTypedSearch(searchType, format, speciesOrSet);\r\n\t\tif (this.typedSearch) this.dex = this.typedSearch.dex;\r\n\t}\r\n\r\n\taddFilter(entry: SearchFilter): boolean {\r\n\t\tif (!this.typedSearch) return false;\r\n\t\tlet [type] = entry;\r\n\t\tif (this.typedSearch.searchType === 'pokemon') {\r\n\t\t\tif (type === this.sortCol) this.sortCol = null;\r\n\t\t\tif (!['type', 'move', 'ability', 'egggroup', 'tier'].includes(type)) return false;\r\n\t\t\tif (type === 'move') entry[1] = toID(entry[1]);\r\n\t\t\tif (!this.filters) this.filters = [];\r\n\t\t\tthis.results = null;\r\n\t\t\tfor (const filter of this.filters) {\r\n\t\t\t\tif (filter[0] === type && filter[1] === entry[1]) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.filters.push(entry);\r\n\t\t\treturn true;\r\n\t\t} else if (this.typedSearch.searchType === 'move') {\r\n\t\t\tif (type === this.sortCol) this.sortCol = null;\r\n\t\t\tif (!['type', 'category', 'pokemon'].includes(type)) return false;\r\n\t\t\tif (type === 'pokemon') entry[1] = toID(entry[1]);\r\n\t\t\tif (!this.filters) this.filters = [];\r\n\t\t\tthis.filters.push(entry);\r\n\t\t\tthis.results = null;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tremoveFilter(entry?: SearchFilter): boolean {\r\n\t\tif (!this.filters) return false;\r\n\t\tif (entry) {\r\n\t\t\tconst filterid = entry.join(':');\r\n\t\t\tlet deleted: string[] | null = null;\r\n\t\t\t// delete specific filter\r\n\t\t\tfor (let i = 0; i < this.filters.length; i++) {\r\n\t\t\t\tif (filterid === this.filters[i].join(':')) {\r\n\t\t\t\t\tdeleted = this.filters[i];\r\n\t\t\t\t\tthis.filters.splice(i, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!deleted) return false;\r\n\t\t} else {\r\n\t\t\tthis.filters.pop();\r\n\t\t}\r\n\t\tif (!this.filters.length) this.filters = null;\r\n\t\tthis.results = null;\r\n\t\treturn true;\r\n\t}\r\n\r\n\ttoggleSort(sortCol: string) {\r\n\t\tif (this.sortCol === sortCol) {\r\n\t\t\tif (!this.reverseSort) {\r\n\t\t\t\tthis.reverseSort = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.sortCol = null;\r\n\t\t\t\tthis.reverseSort = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.sortCol = sortCol;\r\n\t\t\tthis.reverseSort = false;\r\n\t\t}\r\n\t\tthis.results = null;\r\n\t}\r\n\r\n\tfilterLabel(filterType: string) {\r\n\t\tif (this.typedSearch && this.typedSearch.searchType !== filterType) {\r\n\t\t\treturn 'Filter';\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tillegalLabel(id: ID) {\r\n\t\treturn this.typedSearch?.illegalReasons?.[id] || null;\r\n\t}\r\n\r\n\tgetTier(species: Species) {\r\n\t\treturn this.typedSearch?.getTier(species) || '';\r\n\t}\r\n\r\n\ttextSearch(query: string): SearchRow[] {\r\n\t\tquery = toID(query);\r\n\r\n\t\tthis.exactMatch = false;\r\n\t\tlet searchType: SearchType | '' = this.typedSearch?.searchType || '';\r\n\r\n\t\t// If searchType exists, we're searching mainly for results of that type.\r\n\t\t// We'll still search for results of other types, but those results\r\n\t\t// will only be used to filter results for that type.\r\n\t\tlet searchTypeIndex = (searchType ? DexSearch.typeTable[searchType] : -1);\r\n\r\n\t\t/** searching for \"Psychic type\" will make the type come up over the move */\r\n\t\tlet qFilterType: 'type' | '' = '';\r\n\t\tif (query.slice(-4) === 'type') {\r\n\t\t\tif (query.slice(0, -4) in window.BattleTypeChart) {\r\n\t\t\t\tquery = query.slice(0, -4);\r\n\t\t\t\tqFilterType = 'type';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// i represents the location of the search index we're looking at\r\n\t\tlet i = DexSearch.getClosest(query);\r\n\t\tthis.exactMatch = (BattleSearchIndex[i][0] === query);\r\n\r\n\t\t// Even with output buffer buckets, we make multiple passes through\r\n\t\t// the search index. searchPasses is a queue of which pass we're on:\r\n\t\t// [passType, i, query]\r\n\r\n\t\t// By doing an alias pass after the normal pass, we ensure that\r\n\t\t// mid-word matches only display after start matches.\r\n\t\tlet passType: SearchPassType | '' = '';\r\n\t\t/**\r\n\t\t * pass types:\r\n\t\t * * '': time to pop the next pass off the searchPasses queue\r\n\t\t * * 'normal': start at i and stop when results no longer start with query\r\n\t\t * * 'alias': like normal, but output aliases instead of non-alias results\r\n\t\t * * 'fuzzy': start at i and stop when you have two results\r\n\t\t * * 'exact': like normal, but stop at i\r\n\t\t */\r\n\t\ttype SearchPassType = 'normal' | 'alias' | 'fuzzy' | 'exact';\r\n\t\t/**\r\n\t\t * [passType, i, query]\r\n\t\t *\r\n\t\t * i = index of BattleSearchIndex to start from\r\n\t\t *\r\n\t\t * By doing an alias pass after the normal pass, we ensure that\r\n\t\t * mid-word matches only display after start matches.\r\n\t\t */\r\n\t\ttype SearchPass = [SearchPassType, number, string];\r\n\t\tlet searchPasses: SearchPass[] = [['normal', i, query]];\r\n\r\n\t\t// For performance reasons, only do an alias pass if query is at\r\n\t\t// least 2 chars long\r\n\t\tif (query.length > 1) searchPasses.push(['alias', i, query]);\r\n\r\n\t\t// If the query matches an official alias in BattleAliases: These are\r\n\t\t// different from the aliases in the search index and are given\r\n\t\t// higher priority. We'll do a normal pass through the index with\r\n\t\t// the alias text before any other passes.\r\n\t\tlet queryAlias;\r\n\t\tif (query in BattleAliases) {\r\n\t\t\tif (['sub', 'tr'].includes(query) || toID(BattleAliases[query]).slice(0, query.length) !== query) {\r\n\t\t\t\tqueryAlias = toID(BattleAliases[query]);\r\n\t\t\t\tlet aliasPassType: SearchPassType = (queryAlias === 'hiddenpower' ? 'exact' : 'normal');\r\n\t\t\t\tsearchPasses.unshift([aliasPassType, DexSearch.getClosest(queryAlias), queryAlias]);\r\n\t\t\t}\r\n\t\t\tthis.exactMatch = true;\r\n\t\t}\r\n\r\n\t\t// If there are no matches starting with query: Do a fuzzy match pass\r\n\t\t// Fuzzy matches will still be shown after alias matches\r\n\t\tif (!this.exactMatch && BattleSearchIndex[i][0].substr(0, query.length) !== query) {\r\n\t\t\t// No results start with this. Do a fuzzy match pass.\r\n\t\t\tlet matchLength = query.length - 1;\r\n\t\t\tif (!i) i++;\r\n\t\t\twhile (matchLength &&\r\n\t\t\t\tBattleSearchIndex[i][0].substr(0, matchLength) !== query.substr(0, matchLength) &&\r\n\t\t\t\tBattleSearchIndex[i - 1][0].substr(0, matchLength) !== query.substr(0, matchLength)) {\r\n\t\t\t\tmatchLength--;\r\n\t\t\t}\r\n\t\t\tlet matchQuery = query.substr(0, matchLength);\r\n\t\t\twhile (i >= 1 && BattleSearchIndex[i - 1][0].substr(0, matchLength) === matchQuery) i--;\r\n\t\t\tsearchPasses.push(['fuzzy', i, '']);\r\n\t\t}\r\n\r\n\t\t// We split the output buffers into 8 buckets.\r\n\t\t// Bucket 0 is usually unused, and buckets 1-7 represent\r\n\t\t// pokemon, types, moves, etc (see typeTable).\r\n\r\n\t\t// When we're done, the buffers are concatenated together to form\r\n\t\t// our results, with each buffer getting its own header, unlike\r\n\t\t// multiple-pass results, which have no header.\r\n\r\n\t\t// Notes:\r\n\t\t// - if we have a searchType, that searchType's buffer will be on top\r\n\t\tlet bufs: SearchRow[][] = [[], [], [], [], [], [], [], [], [], []];\r\n\t\tlet topbufIndex = -1;\r\n\r\n\t\tlet count = 0;\r\n\t\tlet nearMatch = false;\r\n\r\n\t\t/** [type, id, typeIndex] */\r\n\t\tlet instafilter: [SearchType, ID, number] | null = null;\r\n\t\tlet instafilterSort = [0, 1, 2, 5, 4, 3, 6, 7, 8];\r\n\t\tlet illegal = this.typedSearch?.illegalReasons;\r\n\r\n\t\t// We aren't actually looping through the entirety of the searchIndex\r\n\t\tfor (i = 0; i < BattleSearchIndex.length; i++) {\r\n\t\t\tif (!passType) {\r\n\t\t\t\tlet searchPass = searchPasses.shift();\r\n\t\t\t\tif (!searchPass) break;\r\n\t\t\t\tpassType = searchPass[0];\r\n\t\t\t\ti = searchPass[1];\r\n\t\t\t\tquery = searchPass[2];\r\n\t\t\t}\r\n\r\n\t\t\tlet entry = BattleSearchIndex[i];\r\n\t\t\tlet id = entry[0];\r\n\t\t\tlet type = entry[1];\r\n\r\n\t\t\tif (!id) break;\r\n\r\n\t\t\tif (passType === 'fuzzy') {\r\n\t\t\t\t// fuzzy match pass; stop after 2 results\r\n\t\t\t\tif (count >= 2) {\r\n\t\t\t\t\tpassType = '';\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tnearMatch = true;\r\n\t\t\t} else if (passType === 'exact') {\r\n\t\t\t\t// exact pass; stop after 1 result\r\n\t\t\t\tif (count >= 1) {\r\n\t\t\t\t\tpassType = '';\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t} else if (id.substr(0, query.length) !== query) {\r\n\t\t\t\t// regular pass, time to move onto our next match\r\n\t\t\t\tpassType = '';\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (entry.length > 2) {\r\n\t\t\t\t// alias entry\r\n\t\t\t\tif (passType !== 'alias') continue;\r\n\t\t\t} else {\r\n\t\t\t\t// normal entry\r\n\t\t\t\tif (passType === 'alias') continue;\r\n\t\t\t}\r\n\r\n\t\t\tlet typeIndex = DexSearch.typeTable[type];\r\n\r\n\t\t\t// For performance, with a query length of 1, we only fill the first bucket\r\n\t\t\tif (query.length === 1 && typeIndex !== (searchType ? searchTypeIndex : 1)) continue;\r\n\r\n\t\t\t// For pokemon queries, accept types/tier/abilities/moves/eggroups as filters\r\n\t\t\tif (searchType === 'pokemon' && (typeIndex === 5 || typeIndex > 7)) continue;\r\n\t\t\tif (searchType === 'pokemon' && typeIndex === 3 && this.dex.gen < 9) continue;\r\n\t\t\t// For move queries, accept types/categories as filters\r\n\t\t\tif (searchType === 'move' && ((typeIndex !== 8 && typeIndex > 4) || typeIndex === 3)) continue;\r\n\t\t\t// For move queries in the teambuilder, don't accept pokemon as filters\r\n\t\t\tif (searchType === 'move' && illegal && typeIndex === 1) continue;\r\n\t\t\t// For ability/item queries, don't accept anything else as a filter\r\n\t\t\tif ((searchType === 'ability' || searchType === 'item') && typeIndex !== searchTypeIndex) continue;\r\n\t\t\t// Query was a type name followed 'type'; only show types\r\n\t\t\tif (qFilterType === 'type' && typeIndex !== 2) continue;\r\n\t\t\t// hardcode cases of duplicate non-consecutive aliases\r\n\t\t\tif ((id === 'megax' || id === 'megay') && 'mega'.startsWith(query)) continue;\r\n\r\n\t\t\tlet matchStart = 0;\r\n\t\t\tlet matchEnd = 0;\r\n\t\t\tif (passType === 'alias') {\r\n\t\t\t\t// alias entry\r\n\t\t\t\t// [aliasid, type, originalid, matchStart, originalindex]\r\n\t\t\t\tmatchStart = entry[3]!;\r\n\t\t\t\tlet originalIndex = entry[2]!;\r\n\t\t\t\tif (matchStart) {\r\n\t\t\t\t\tmatchEnd = matchStart + query.length;\r\n\t\t\t\t\tmatchStart += (BattleSearchIndexOffset[originalIndex][matchStart] || '0').charCodeAt(0) - 48;\r\n\t\t\t\t\tmatchEnd += (BattleSearchIndexOffset[originalIndex][matchEnd - 1] || '0').charCodeAt(0) - 48;\r\n\t\t\t\t}\r\n\t\t\t\tid = BattleSearchIndex[originalIndex][0];\r\n\t\t\t} else {\r\n\t\t\t\tmatchEnd = query.length;\r\n\t\t\t\tif (matchEnd) matchEnd += (BattleSearchIndexOffset[i][matchEnd - 1] || '0').charCodeAt(0) - 48;\r\n\t\t\t}\r\n\r\n\t\t\t// some aliases are substrings\r\n\t\t\tif (queryAlias === id && query !== id) continue;\r\n\r\n\t\t\tif (searchType && searchTypeIndex !== typeIndex) {\r\n\t\t\t\t// This is a filter, set it as an instafilter candidate\r\n\t\t\t\tif (!instafilter || instafilterSort[typeIndex] < instafilterSort[instafilter[2]]) {\r\n\t\t\t\t\tinstafilter = [type, id, typeIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// show types above Arceus formes\r\n\t\t\tif (topbufIndex < 0 && searchTypeIndex < 2 && passType === 'alias' && !bufs[1].length && bufs[2].length) {\r\n\t\t\t\ttopbufIndex = 2;\r\n\t\t\t}\r\n\r\n\t\t\t\t\t\t// determine if the element comes from the current mod\r\n\t\t\t\t\t\tconst table = BattleTeambuilderTable[window.room.curTeam.mod];\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\ttypeIndex === 1 && (!BattlePokedex[id] || BattlePokedex[id].exists === false) &&\r\n\t\t\t\t\t\t\t(!table || !table.overrideDexInfo || id in table.overrideDexInfo === false)\r\n\t\t\t\t\t\t) continue;\r\n\t\t\t\t\t\telse if (\r\n\t\t\t\t\t\t\ttypeIndex === 5 && (!BattleItems[id] || BattleItems[id].exists === false) &&\r\n\t\t\t\t\t\t\t(!table || !table.overrideItemInfo || id in table.overrideItemInfo === false)\r\n\t\t\t\t\t\t) continue;\r\n\t\t\t\t\t\telse if (\r\n\t\t\t\t\t\t\ttypeIndex === 4 && (!BattleMovedex[id] || BattleMovedex[id].exists === false) &&\r\n\t\t\t\t\t\t\t(!table || !table.overrideMoveInfo || id in table.overrideMoveInfo === false)\r\n\t\t\t\t\t\t) continue;\r\n\t\t\t\t\t\telse if (\r\n\t\t\t\t\t\t\ttypeIndex === 6 && (!BattleAbilities[id] || BattleAbilities[id].exists === false) &&\r\n\t\t\t\t\t\t\t(!table || !table.overrideAbilityDesc || id in table.overrideAbilityDesc === false)\r\n\t\t\t\t\t\t) continue;\r\n\t\t\t\t\t\telse if (\r\n\t\t\t\t\t\t\ttypeIndex === 2 && id.replace(id.charAt(0), id.charAt(0).toUpperCase()) in window.BattleTypeChart === false &&\r\n\t\t\t\t\t\t\t(!table || id.replace(id.charAt(0), id.charAt(0).toUpperCase()) in table.overrideTypeChart === false)\r\n\t\t\t\t\t\t) continue;\r\n\r\n\t\t\tif (illegal && typeIndex === searchTypeIndex) {\r\n\t\t\t\t// Always show illegal results under legal results.\r\n\t\t\t\t// This is done by putting legal results (and the type header)\r\n\t\t\t\t// in bucket 0, and illegal results in the searchType's bucket.\r\n\t\t\t\t// searchType buckets are always on top (but under bucket 0), so\r\n\t\t\t\t// illegal results will be seamlessly right under legal results.\r\n\t\t\t\tif (!bufs[typeIndex].length && !bufs[0].length) {\r\n\t\t\t\t\tbufs[0] = [['header', DexSearch.typeName[type]]];\r\n\t\t\t\t}\r\n\t\t\t\tif (!(id in illegal)) typeIndex = 0;\r\n\t\t\t} else {\r\n\t\t\t\tif (!bufs[typeIndex].length) {\r\n\t\t\t\t\tbufs[typeIndex] = [['header', DexSearch.typeName[type]]];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// don't match duplicate aliases\r\n\t\t\tlet curBufLength = (passType === 'alias' && bufs[typeIndex].length);\r\n\t\t\tif (curBufLength && bufs[typeIndex][curBufLength - 1][1] === id) continue;\r\n\r\n\t\t\tbufs[typeIndex].push([type, id, matchStart, matchEnd]);\r\n\r\n\t\t\tcount++;\r\n\t\t}\r\n\r\n\t\tlet topbuf: SearchRow[] = [];\r\n\t\tif (nearMatch) {\r\n\t\t\ttopbuf = [['html', `<em>No exact match found. The closest matches alphabetically are:</em>`]];\r\n\t\t}\r\n\t\tif (topbufIndex >= 0) {\r\n\t\t\ttopbuf = topbuf.concat(bufs[topbufIndex]);\r\n\t\t\tbufs[topbufIndex] = [];\r\n\t\t}\r\n\t\tif (searchTypeIndex >= 0) {\r\n\t\t\ttopbuf = topbuf.concat(bufs[0]);\r\n\t\t\ttopbuf = topbuf.concat(bufs[searchTypeIndex]);\r\n\t\t\tbufs[searchTypeIndex] = [];\r\n\t\t\tbufs[0] = [];\r\n\t\t}\r\n\r\n\t\tif (instafilter && count < 20) {\r\n\t\t\t// Result count is less than 20, so we can instafilter\r\n\t\t\tbufs.push(this.instafilter(searchType, instafilter[0], instafilter[1]));\r\n\t\t}\r\n\r\n\t\tthis.results = Array.prototype.concat.apply(topbuf, bufs);\r\n\t\treturn this.results;\r\n\t}\r\n\tprivate instafilter(searchType: SearchType | '', fType: SearchType, fId: ID): SearchRow[] {\r\n\t\tlet buf: SearchRow[] = [];\r\n\t\tlet illegalBuf: SearchRow[] = [];\r\n\t\tlet illegal = this.typedSearch?.illegalReasons;\r\n\t\t// Change object to look in if using a mod\r\n\t\tlet pokedex = BattlePokedex;\r\n\t\tlet moveDex = BattleMovedex;\r\n\t\tif (window.room.curTeam.mod) {\r\n\t\t\tpokedex = {};\r\n\t\t\tmoveDex = {};\r\n\t\t\tconst table = BattleTeambuilderTable[window.room.curTeam.mod];\r\n\t\t\tfor (const id in table.overrideDexInfo) {\r\n\t\t\t\tpokedex[id] = {\r\n\t\t\t\t\ttypes: table.overrideDexInfo[id].types,\r\n\t\t\t\t\tabilities: table.overrideDexInfo[id].abilities,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tfor (const id in table.overrideMoveInfo) {\r\n\t\t\t\tmoveDex[id] = {\r\n\t\t\t\t\ttype: table.overrideMoveInfo.type,\r\n\t\t\t\t\tcategory: table.overrideMoveInfo.category,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tpokedex = {...pokedex, ...BattlePokedex};\r\n\t\t\tmoveDex = {...moveDex, ...BattleMovedex};\r\n\t\t}\r\n\t\tif (searchType === 'pokemon') {\r\n\t\t\tswitch (fType) {\r\n\t\t\tcase 'type':\r\n\t\t\t\tlet type = fId.charAt(0).toUpperCase() + fId.slice(1) as TypeName;\r\n\t\t\t\tbuf.push(['header', `${type}-type Pok&eacute;mon`]);\r\n\t\t\t\tfor (let id in BattlePokedex) {\r\n\t\t\t\t\tif (!BattlePokedex[id].types) continue;\r\n\t\t\t\t\tif (this.dex.species.get(id).types.includes(type)) {\r\n\t\t\t\t\t\t(illegal && id in illegal ? illegalBuf : buf).push(['pokemon', id as ID]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ability':\r\n\t\t\t\tlet ability = Dex.abilities.get(fId).name;\r\n\t\t\t\tbuf.push(['header', `${ability} Pok&eacute;mon`]);\r\n\t\t\t\tfor (let id in BattlePokedex) {\r\n\t\t\t\t\tif (!BattlePokedex[id].abilities) continue;\r\n\t\t\t\t\tif (Dex.hasAbility(this.dex.species.get(id), ability)) {\r\n\t\t\t\t\t\t(illegal && id in illegal ? illegalBuf : buf).push(['pokemon', id as ID]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else if (searchType === 'move') {\r\n\t\t\tswitch (fType) {\r\n\t\t\tcase 'type':\r\n\t\t\t\tlet type = fId.charAt(0).toUpperCase() + fId.slice(1);\r\n\t\t\t\tbuf.push(['header', `${type}-type moves`]);\r\n\t\t\t\tfor (let id in BattleMovedex) {\r\n\t\t\t\t\tif (BattleMovedex[id].type === type) {\r\n\t\t\t\t\t\t(illegal && id in illegal ? illegalBuf : buf).push(['move', id as ID]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'category':\r\n\t\t\t\tlet category = fId.charAt(0).toUpperCase() + fId.slice(1);\r\n\t\t\t\tbuf.push(['header', `${category} moves`]);\r\n\t\t\t\tfor (let id in BattleMovedex) {\r\n\t\t\t\t\tif (BattleMovedex[id].category === category) {\r\n\t\t\t\t\t\t(illegal && id in illegal ? illegalBuf : buf).push(['move', id as ID]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [...buf, ...illegalBuf];\r\n\t}\r\n\r\n\tstatic getClosest(query: string) {\r\n\t\t// binary search through the index!\r\n\t\tlet left = 0;\r\n\t\tlet right = BattleSearchIndex.length - 1;\r\n\t\twhile (right > left) {\r\n\t\t\tlet mid = Math.floor((right - left) / 2 + left);\r\n\t\t\tif (BattleSearchIndex[mid][0] === query && (mid === 0 || BattleSearchIndex[mid - 1][0] !== query)) {\r\n\t\t\t\t// that's us\r\n\t\t\t\treturn mid;\r\n\t\t\t} else if (BattleSearchIndex[mid][0] < query) {\r\n\t\t\t\tleft = mid + 1;\r\n\t\t\t} else {\r\n\t\t\t\tright = mid - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (left >= BattleSearchIndex.length - 1) left = BattleSearchIndex.length - 1;\r\n\t\telse if (BattleSearchIndex[left + 1][0] && BattleSearchIndex[left][0] < query) left++;\r\n\t\tif (left && BattleSearchIndex[left - 1][0] === query) left--;\r\n\t\treturn left;\r\n\t}\r\n}\r\n\r\nabstract class BattleTypedSearch<T extends SearchType> {\r\n\tsearchType: T;\r\n\t/**\r\n\t * Dex for the mod/generation to search.\r\n\t */\r\n\tdex: ModdedDex = Dex;\r\n\t/**\r\n\t * Format is the first of two base filters. It constrains results to things\r\n\t * legal in the format, and affects the default sort.\r\n\t *\r\n\t * This string specifically normalizes out generation number and the words\r\n\t * \"Doubles\" and \"Let's Go\" from the name.\r\n\t */\r\n\tformat = '' as ID;\r\n\t/**\r\n\t*\r\n\t* mod formats can set the format variable to a standard format, so modFormat\r\n\t* keeps track of the original format in such a case\r\n\t*/\r\n   modFormat = '' as ID;\r\n\t/**\r\n\t * `species` is the second of two base filters. It constrains results to\r\n\t * things that species can use, and affects the default sort.\r\n\t */\r\n\tspecies = '' as ID;\r\n\t/**\r\n\t * `set` is a pseudo-base filter; it has minor effects on move sorting.\r\n\t * (Abilities/items can affect what moves are sorted as usable.)\r\n\t */\r\n\tset: PokemonSet | null = null;\r\n\tmod = '';\r\n\r\n\tprotected formatType: 'doubles' | 'bdsp' | 'bdspdoubles' | 'letsgo' | 'metronome' | 'natdex' | 'nfe' |\r\n\t'ssdlc1' | 'ssdlc1doubles' | 'predlc' | 'predlcdoubles' | 'predlcnatdex' | 'stadium' | 'lc' | null = null;\r\n\r\n\t/**\r\n\t * Cached copy of what the results list would be with only base filters\r\n\t * (i.e. with an empty `query` and `filters`)\r\n\t */\r\n\tbaseResults: SearchRow[] | null = null;\r\n\t/**\r\n\t * Cached copy of all results not in `baseResults` - mostly in case a user\r\n\t * is wondering why a specific result isn't showing up.\r\n\t */\r\n\tbaseIllegalResults: SearchRow[] | null = null;\r\n\tillegalReasons: {[id: string]: string} | null = null;\r\n\tresults: SearchRow[] | null = null;\r\n\r\n\tprotected readonly sortRow: SearchRow | null = null;\r\n\r\n\tconstructor(searchType: T, format = '' as ID, speciesOrSet: ID | PokemonSet = '' as ID) {\r\n\t\tthis.searchType = searchType;\r\n\r\n\t\tthis.baseResults = null;\r\n\t\tthis.baseIllegalResults = null;\r\n\t\tthis.modFormat = format;\r\n\t\tlet gen = 9;\r\n\t\tconst ClientMods = window.ModConfig;\r\n\t\tif (format.slice(0, 3) === 'gen') {\r\n\t\t\tconst gen = (Number(format.charAt(3)) || 6);\r\n\t\t\t// format = (format.slice(4) || 'customgame') as ID;\r\n\t\t\tthis.dex = Dex.forGen(gen);\r\n\t\t\tlet mod = '';\r\n\t\t\tlet overrideFormat = '';\r\n\t\t\tlet modFormatType = '';\r\n\t\t\tfor (const modid in (ClientMods)) {\r\n\t\t\t\tfor (const formatid in ClientMods[modid].formats) {\r\n\t\t\t\t\tif (formatid === format || format.slice(4) === formatid) {\r\n\t\t\t\t\t\tif (format.slice(4) === formatid) this.modFormat = formatid;\r\n\t\t\t\t\t\tmod = modid;\r\n\t\t\t\t\t\tconst formatTable = ClientMods[modid].formats[formatid];\r\n\t\t\t\t\t\tif (mod && formatTable.teambuilderFormat) overrideFormat = toID(formatTable.teambuilderFormat);\r\n\t\t\t\t\t\tif (mod && formatTable.formatType) modFormatType = toID(formatTable.formatType);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (mod) {\r\n\t\t\t\tthis.dex = Dex.mod(mod as ID);\r\n\t\t\t\tthis.dex.gen = gen;\r\n\t\t\t\tthis.mod = mod;\r\n\t\t\t} else {\r\n\t\t\t\tthis.dex = Dex.forGen(gen);\r\n\t\t\t}\r\n\t\t\tif (overrideFormat) format = overrideFormat as ID;\r\n\t\t\telse format = (format.slice(4) || 'customgame') as ID;\r\n\t\t\tif (modFormatType) this.formatType = modFormatType as 'doubles' | 'letsgo' | 'metronome' | 'natdex' | 'nfe' | 'dlc1' | 'dlc1doubles' | null;\r\n\t\t} else if (!format) {\r\n\t\t\tthis.dex = Dex;\r\n\t\t}\r\n\t\tif (format.startsWith('dlc1')) {\r\n\t\t\tif (format.includes('doubles')) {\r\n\t\t\t\tthis.formatType = 'ssdlc1doubles';\r\n\t\t\t} else {\r\n\t\t\t\tthis.formatType = 'ssdlc1';\r\n\t\t\t}\r\n\t\t\tformat = format.slice(4) as ID;\r\n\t\t}\r\n\t\tif (format.startsWith('predlc')) {\r\n\t\t\tif (format.includes('doubles') && !format.includes('nationaldex')) {\r\n\t\t\t\tthis.formatType = 'predlcdoubles';\r\n\t\t\t} else if (format.includes('nationaldex')) {\r\n\t\t\t\tthis.formatType = 'predlcnatdex';\r\n\t\t\t} else {\r\n\t\t\t\tthis.formatType = 'predlc';\r\n\t\t\t}\r\n\t\t\tformat = format.slice(6) as ID;\r\n\t\t}\r\n\t\tif (format.startsWith('stadium')) {\r\n\t\t\tthis.formatType = 'stadium';\r\n\t\t\tformat = format.slice(7) as ID;\r\n\t\t\tif (!format) format = 'ou' as ID;\r\n\t\t}\r\n\t\tif (format.startsWith('vgc')) this.formatType = 'doubles';\r\n\t\tif (format === 'vgc2020') this.formatType = 'ssdlc1doubles';\r\n\t\tif (format === 'vgc2023regulationd') this.formatType = 'predlcdoubles';\r\n\t\tif (format.includes('bdsp')) {\r\n\t\t\tif (format.includes('doubles')) {\r\n\t\t\t\tthis.formatType = 'bdspdoubles';\r\n\t\t\t} else {\r\n\t\t\t\tthis.formatType = 'bdsp';\r\n\t\t\t}\r\n\t\t\tformat = format.slice(4) as ID;\r\n\t\t\tthis.dex = Dex.mod('gen8bdsp' as ID);\r\n\t\t}\r\n\t\tif (format === 'partnersincrime') this.formatType = 'doubles';\r\n\t\tif (format.startsWith('ffa') || format === 'freeforall') this.formatType = 'doubles';\r\n\t\tif (format.includes('letsgo')) {\r\n\t\t\tthis.formatType = 'letsgo';\r\n\t\t\tthis.dex = Dex.mod('gen7letsgo' as ID);\r\n\t\t}\r\n\t\tif (format.includes('nationaldex') || format.startsWith('nd') || format.includes('natdex')) {\r\n\t\t\tformat = (format.startsWith('nd') ? format.slice(2) :\r\n\t\t\t\tformat.includes('natdex') ? format.slice(6) : format.slice(11)) as ID;\r\n\t\t\tthis.formatType = 'natdex';\r\n\t\t\tif (!format) format = 'ou' as ID;\r\n\t\t}\r\n\t\tif (format.includes('doubles') && this.dex.gen > 4 && !this.formatType) this.formatType = 'doubles';\r\n\t\tif (this.formatType === 'letsgo') format = format.slice(6) as ID;\r\n\t\tif (format.includes('metronome')) {\r\n\t\t\tthis.formatType = 'metronome';\r\n\t\t}\r\n\t\tif (format.endsWith('nfe')) {\r\n\t\t\tformat = format.slice(3) as ID;\r\n\t\t\tthis.formatType = 'nfe';\r\n\t\t\tif (!format) format = 'ou' as ID;\r\n\t\t}\r\n\t\tif ((format.endsWith('lc') || format.startsWith('lc')) && format !== 'caplc' && !this.formatType) {\r\n\t\t\tthis.formatType = 'lc';\r\n\t\t\tformat = 'lc' as ID;\r\n\t\t}\r\n\t\tif (format.endsWith('draft')) format = format.slice(0, -5) as ID;\r\n\t\tthis.format = format;\r\n\r\n\t\tthis.species = '' as ID;\r\n\t\tthis.set = null;\r\n\t\tif (typeof speciesOrSet === 'string') {\r\n\t\t\tif (speciesOrSet) this.species = speciesOrSet;\r\n\t\t} else {\r\n\t\t\tthis.set = speciesOrSet as PokemonSet;\r\n\t\t\tthis.species = toID(this.set.species);\r\n\t\t}\r\n\t\tif (!searchType || !this.set) return;\r\n\t}\r\n\tgetResults(filters?: SearchFilter[] | null, sortCol?: string | null, reverseSort?: boolean): SearchRow[] {\r\n\t\tif (sortCol === 'type') {\r\n\t\t\treturn [this.sortRow!, ...BattleTypeSearch.prototype.getDefaultResults.call(this)];\r\n\t\t} else if (sortCol === 'category') {\r\n\t\t\treturn [this.sortRow!, ...BattleCategorySearch.prototype.getDefaultResults.call(this)];\r\n\t\t} else if (sortCol === 'ability') {\r\n\t\t\treturn [this.sortRow!, ...BattleAbilitySearch.prototype.getDefaultResults.call(this)];\r\n\t\t}\r\n\r\n\t\tif (!this.baseResults) {\r\n\t\t\tthis.baseResults = this.getBaseResults();\r\n\t\t}\r\n\r\n\t\tif (!this.baseIllegalResults) {\r\n\t\t\tconst legalityFilter: {[id: string]: 1} = {};\r\n\t\t\tfor (const [resultType, value] of this.baseResults) {\r\n\t\t\t\tif (resultType === this.searchType) legalityFilter[value] = 1;\r\n\t\t\t}\r\n\t\t\tthis.baseIllegalResults = [];\r\n\t\t\tthis.illegalReasons = {};\r\n\r\n\t\t\tfor (const id in this.getTable()) {\r\n\t\t\t\tif (!(id in legalityFilter)) {\r\n\t\t\t\t\tthis.baseIllegalResults.push([this.searchType, id as ID]);\r\n\t\t\t\t\tthis.illegalReasons[id] = 'Illegal';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet results: SearchRow[];\r\n\t\tlet illegalResults: SearchRow[] | null;\r\n\r\n\t\tif (filters) {\r\n\t\t\tresults = [];\r\n\t\t\tillegalResults = [];\r\n\t\t\tfor (const result of this.baseResults) {\r\n\t\t\t\tif (this.filter(result, filters)) {\r\n\t\t\t\t\tif (results.length && result[0] === 'header' && results[results.length - 1][0] === 'header') {\r\n\t\t\t\t\t\tresults[results.length - 1] = result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresults.push(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (results.length && results[results.length - 1][0] === 'header') {\r\n\t\t\t\tresults.pop();\r\n\t\t\t}\r\n\t\t\tfor (const result of this.baseIllegalResults) {\r\n\t\t\t\tif (this.filter(result, filters)) {\r\n\t\t\t\t\tillegalResults.push(result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresults = [...this.baseResults];\r\n\t\t\tillegalResults = null;\r\n\t\t}\r\n\r\n\t\tif (sortCol) {\r\n\t\t\tresults = results.filter(([rowType]) => rowType === this.searchType);\r\n\t\t\tresults = this.sort(results, sortCol, reverseSort);\r\n\t\t\tif (illegalResults) {\r\n\t\t\t\tillegalResults = illegalResults.filter(([rowType]) => rowType === this.searchType);\r\n\t\t\t\tillegalResults = this.sort(illegalResults, sortCol, reverseSort);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.sortRow) {\r\n\t\t\tresults = [this.sortRow, ...results];\r\n\t\t}\r\n\t\tif (illegalResults && illegalResults.length) {\r\n\t\t\tresults = [...results, ['header', \"Illegal results\"], ...illegalResults];\r\n\t\t}\r\n\t\treturn results;\r\n\t}\r\n\tprotected firstLearnsetid(speciesid: ID) {\r\n\t\tlet table = BattleTeambuilderTable;\r\n\t\tif (this.formatType?.startsWith('bdsp')) table = table['gen8bdsp'];\r\n\t\tif (this.formatType === 'letsgo') table = table['gen7letsgo'];\r\n\t\tif (speciesid in table.learnsets) return speciesid;\r\n\t\tconst species = this.dex.species.get(speciesid);\r\n\t\tif (!species.exists) return '' as ID;\r\n\r\n\t\tlet baseLearnsetid = toID(species.baseSpecies);\r\n\t\tif (typeof species.battleOnly === 'string' && species.battleOnly !== species.baseSpecies) {\r\n\t\t\tbaseLearnsetid = toID(species.battleOnly);\r\n\t\t}\r\n\t\tif (baseLearnsetid in table.learnsets) return baseLearnsetid;\r\n\t\treturn '' as ID;\r\n\t}\r\n\tprotected nextLearnsetid(learnsetid: ID, speciesid: ID) {\r\n\t\tif (learnsetid === 'lycanrocdusk' || (speciesid === 'rockruff' && learnsetid === 'rockruff')) {\r\n\t\t\treturn 'rockruffdusk' as ID;\r\n\t\t}\r\n\t\tconst lsetSpecies = this.dex.species.get(learnsetid);\r\n\t\tif (!lsetSpecies.exists) return '' as ID;\r\n\r\n\t\tif (lsetSpecies.id === 'gastrodoneast') return 'gastrodon' as ID;\r\n\t\tif (lsetSpecies.id === 'pumpkaboosuper') return 'pumpkaboo' as ID;\r\n\t\tif (lsetSpecies.id === 'sinisteaantique') return 'sinistea' as ID;\r\n\t\tif (lsetSpecies.id === 'tatsugiristretchy') return 'tatsugiri' as ID;\r\n\r\n\t\tconst next = lsetSpecies.battleOnly || lsetSpecies.changesFrom || lsetSpecies.prevo;\r\n\t\tif (next) return toID(next);\r\n\r\n\t\treturn '' as ID;\r\n\t}\r\n\tprotected canLearn(speciesid: ID, moveid: ID) {\r\n\t\tconst move = this.dex.moves.get(moveid);\r\n\t\tif (this.formatType === 'natdex' && move.isNonstandard && move.isNonstandard !== 'Past') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tconst gen = this.dex.gen;\r\n\t\tlet genChar = `${gen}`;\r\n\t\tif (\r\n\t\t\tthis.format.startsWith('vgc') ||\r\n\t\t\tthis.format.startsWith('battlespot') ||\r\n\t\t\tthis.format.startsWith('battlestadium') ||\r\n\t\t\tthis.format.startsWith('battlefestival') ||\r\n\t\t\t(this.dex.gen === 9 && this.formatType !== 'natdex')\r\n\t\t) {\r\n\t\t\tif (gen === 9) {\r\n\t\t\t\tgenChar = 'a';\r\n\t\t\t} else if (gen === 8) {\r\n\t\t\t\tgenChar = 'g';\r\n\t\t\t} else if (gen === 7) {\r\n\t\t\t\tgenChar = 'q';\r\n\t\t\t} else if (gen === 6) {\r\n\t\t\t\tgenChar = 'p';\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet learnsetid = this.firstLearnsetid(speciesid);\r\n\t\twhile (learnsetid) {\r\n\t\t\tlet table = BattleTeambuilderTable;\r\n\t\t\tif (this.formatType?.startsWith('bdsp')) table = table['gen8bdsp'];\r\n\t\t\tif (this.formatType === 'letsgo') table = table['gen7letsgo'];\r\n\t\t\tlet learnset = table.learnsets[learnsetid];\r\n\t\t\tif (this.mod) {\r\n\t\t\t\tconst overrideLearnsets = BattleTeambuilderTable[this.mod].overrideLearnsets;\r\n\t\t\t\tif (overrideLearnsets[learnsetid]) {\r\n\t\t\t\t\tif(!learnset) learnset = overrideLearnsets[learnsetid]; //Didn't have learnset and mod gave it one\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfor (const learnedMove in overrideLearnsets[learnsetid]) learnset[learnedMove] = overrideLearnsets[learnsetid][learnedMove];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Modified this function to account for pet mods with tradebacks enabled\r\n\t\t\tconst tradebacksMod = ['gen1expansionpack', 'gen1burgundy'];\r\n\t\t\tif (learnset && (moveid in learnset) && (!(this.format.startsWith('tradebacks') || tradebacksMod.includes(this.mod)) ? learnset[moveid].includes(genChar) :\r\n\t\t\t\t(learnset[moveid].includes(genChar) ||\r\n\t\t\t\t\t(learnset[moveid].includes(`${gen + 1}`) && move.gen === gen)))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tlearnsetid = this.nextLearnsetid(learnsetid, speciesid);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tgetTier(pokemon: Species) {\r\n\t\tif (this.formatType === 'metronome') {\r\n\t\t\treturn pokemon.num >= 0 ? String(pokemon.num) : pokemon.tier;\r\n\t\t}\r\n\t\tconst modFormatTable = this.mod ? window.ModConfig[this.mod].formats[this.modFormat] : {};\r\n\t\tlet table = window.BattleTeambuilderTable;\r\n\t\tif (this.mod) table = modFormatTable.gameType !== 'doubles' ? BattleTeambuilderTable[this.mod] : BattleTeambuilderTable[this.mod].doubles;\r\n\t\tconst gen = this.dex.gen;\r\n\t\tconst tableKey = this.formatType === 'doubles' ? `gen${gen}doubles` :\r\n\t\t\tthis.formatType === 'letsgo' ? 'gen7letsgo' :\r\n\t\t\tthis.formatType === 'bdsp' ? 'gen8bdsp' :\r\n\t\t\tthis.formatType === 'bdspdoubles' ? 'gen8bdspdoubles' :\r\n\t\t\tthis.formatType === 'nfe' ? `gen${gen}nfe` :\r\n\t\t\tthis.formatType === 'lc' ? `gen${gen}lc` :\r\n\t\t\tthis.formatType === 'ssdlc1' ? 'gen8dlc1' :\r\n\t\t\tthis.formatType === 'ssdlc1doubles' ? 'gen8dlc1doubles' :\r\n\t\t\tthis.formatType === 'predlc' ? 'gen9predlc' :\r\n\t\t\tthis.formatType === 'predlcdoubles' ? 'gen9predlcdoubles' :\r\n\t\t\tthis.formatType === 'predlcnatdex' ? 'gen9predlcnatdex' :\r\n\t\t\tthis.formatType === 'natdex' ? `gen${gen}natdex` :\r\n\t\t\tthis.formatType === 'stadium' ? `gen${gen}stadium${gen > 1 ? gen : ''}` :\r\n\t\t\t`gen${gen}`;\r\n\t\tif (table && table[tableKey]) {\r\n\t\t\ttable = table[tableKey];\r\n\t\t}\r\n\t\tif (!table) return pokemon.tier;\r\n\r\n\t\tlet id = pokemon.id;\r\n\t\tif (id in table.overrideTier) {\r\n\t\t\treturn table.overrideTier[id];\r\n\t\t}\r\n\t\tif (id.slice(-5) === 'totem' && id.slice(0, -5) in table.overrideTier) {\r\n\t\t\treturn table.overrideTier[id.slice(0, -5)];\r\n\t\t}\r\n\t\tid = toID(pokemon.baseSpecies);\r\n\t\tif (id in table.overrideTier) {\r\n\t\t\treturn table.overrideTier[id];\r\n\t\t}\r\n\r\n\t\treturn pokemon.tier;\r\n\t}\r\n\tabstract getTable(): {[id: string]: any};\r\n\tabstract getDefaultResults(): SearchRow[];\r\n\tabstract getBaseResults(): SearchRow[];\r\n\tabstract filter(input: SearchRow, filters: string[][]): boolean;\r\n\tabstract sort(input: SearchRow[], sortCol: string, reverseSort?: boolean): SearchRow[];\r\n}\r\n\r\nclass BattlePokemonSearch extends BattleTypedSearch<'pokemon'> {\r\n\tsortRow: SearchRow = ['sortpokemon', ''];\r\n\tgetTable() {\r\n\t\tif (!this.mod) return BattlePokedex;\r\n\t\telse return {...BattleTeambuilderTable[this.mod].overrideDexInfo, ...BattlePokedex};\r\n\t}\r\n\tgetDefaultResults(): SearchRow[] {\r\n\t\tlet results: SearchRow[] = [];\r\n\t\tfor (let id in BattlePokedex) {\r\n\t\t\tswitch (id) {\r\n\t\t\tcase 'bulbasaur':\r\n\t\t\t\tresults.push(['header', \"Generation 1\"]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'chikorita':\r\n\t\t\t\tresults.push(['header', \"Generation 2\"]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'treecko':\r\n\t\t\t\tresults.push(['header', \"Generation 3\"]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'turtwig':\r\n\t\t\t\tresults.push(['header', \"Generation 4\"]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'victini':\r\n\t\t\t\tresults.push(['header', \"Generation 5\"]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'chespin':\r\n\t\t\t\tresults.push(['header', \"Generation 6\"]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rowlet':\r\n\t\t\t\tresults.push(['header', \"Generation 7\"]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'grookey':\r\n\t\t\t\tresults.push(['header', \"Generation 8\"]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sprigatito':\r\n\t\t\t\tresults.push(['header', \"Generation 9\"]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'missingno':\r\n\t\t\t\tresults.push(['header', \"Glitch\"]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'syclar':\r\n\t\t\t\tresults.push(['header', \"CAP\"]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pikachucosplay':\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tresults.push(['pokemon', id as ID]);\r\n\t\t}\r\n\t\treturn results;\r\n\t}\r\n\tgetBaseResults(): SearchRow[] {\r\n\t\tconst format = this.format;\r\n\t\tif (!format) return this.getDefaultResults();\r\n\t\tconst isVGCOrBS = format.startsWith('battlespot') || format.startsWith('battlestadium') || format.startsWith('vgc');\r\n\t\tconst isHackmons = format.includes('hackmons') || format.endsWith('bh');\r\n\t\tlet isDoublesOrBS = isVGCOrBS || this.formatType?.includes('doubles');\r\n\t\tconst dex = this.dex;\r\n\t\tconst modFormatTable = this.mod ? window.ModConfig[this.mod].formats[this.modFormat] : {};\r\n\t\tlet table = BattleTeambuilderTable;\r\n\t\tif (this.mod) {\r\n\t\t\ttable = modFormatTable.gameType !== 'doubles' ? BattleTeambuilderTable[this.mod] : BattleTeambuilderTable[this.mod].doubles;\r\n\t\t} else if ((format.endsWith('cap') || format.endsWith('caplc')) && dex.gen < 9) {\r\n\t\t\ttable = table['gen' + dex.gen];\r\n\t\t} else if (isVGCOrBS) {\r\n\t\t\ttable = table['gen' + dex.gen + 'vgc'];\r\n\t\t} else if (dex.gen === 9 && isHackmons && !this.formatType) {\r\n\t\t\ttable = table['bh'];\r\n\t\t} else if (\r\n\t\t\ttable['gen' + dex.gen + 'doubles'] && dex.gen > 4 &&\r\n\t\t\tthis.formatType !== 'letsgo' && this.formatType !== 'bdspdoubles' &&\r\n\t\t\tthis.formatType !== 'ssdlc1doubles' && this.formatType !== 'predlcdoubles' &&\r\n\t\t\t(\r\n\t\t\t\tformat.includes('doubles') || format.includes('triples') ||\r\n\t\t\t\tformat === 'freeforall' || format.startsWith('ffa') ||\r\n\t\t\t\tformat === 'partnersincrime'\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\ttable = table['gen' + dex.gen + 'doubles'];\r\n\t\t\tisDoublesOrBS = true;\r\n\t\t} else if (dex.gen < 9 && !this.formatType) {\r\n\t\t\ttable = table['gen' + dex.gen];\r\n\t\t} else if (this.formatType?.startsWith('bdsp')) {\r\n\t\t\ttable = table['gen8' + this.formatType];\r\n\t\t} else if (this.formatType === 'letsgo') {\r\n\t\t\ttable = table['gen7letsgo'];\r\n\t\t} else if (this.formatType === 'natdex') {\r\n\t\t\ttable = table['gen' + dex.gen + 'natdex'];\r\n\t\t} else if (this.formatType === 'metronome') {\r\n\t\t\ttable = table['gen' + dex.gen + 'metronome'];\r\n\t\t} else if (this.formatType === 'nfe') {\r\n\t\t\ttable = table['gen' + dex.gen + 'nfe'];\r\n\t\t} else if (this.formatType === 'lc') {\r\n\t\t\ttable = table['gen' + dex.gen + 'lc'];\r\n\t\t} else if (this.formatType?.startsWith('dlc1')) {\r\n\t\t\tif (this.formatType.includes('doubles')) {\r\n\t\t\t\ttable = table['gen8dlc1doubles'];\r\n\t\t\t} else {\r\n\t\t\t\ttable = table['gen8dlc1'];\r\n\t\t\t}\r\n\t\t} else if (this.formatType?.startsWith('predlc')) {\r\n\t\t\tif (this.formatType.includes('doubles')) {\r\n\t\t\t\ttable = table['gen9predlcdoubles'];\r\n\t\t\t} else if (this.formatType.includes('natdex')) {\r\n\t\t\t\ttable = table['gen9predlcnatdex'];\r\n\t\t\t} else {\r\n\t\t\t\ttable = table['gen9predlc'];\r\n\t\t\t}\r\n\t\t} else if (this.formatType === 'stadium') {\r\n\t\t\ttable = table['gen' + dex.gen + 'stadium' + (dex.gen > 1 ? dex.gen : '')];\r\n\t\t}\r\n\r\n\t\tif (!table.tierSet) {\r\n\t\t\ttable.tierSet = table.tiers.map((r: any) => {\r\n\t\t\t\tif (typeof r === 'string') return ['pokemon', r];\r\n\t\t\t\treturn [r[0], r[1]];\r\n\t\t\t});\r\n\t\t\ttable.tiers = null;\r\n\t\t}\r\n\t\tlet tierSet: SearchRow[] = table.tierSet;\r\n\t\tlet slices: {[k: string]: number} = table.formatSlices;\r\n\t\tif (format === 'ubers' || format === 'uber') tierSet = tierSet.slice(slices.Uber);\r\n\t\telse if (isVGCOrBS || (isHackmons && dex.gen === 9 && !this.formatType)) {\r\n\t\t\tif (format.endsWith('series13') || isHackmons) {\r\n\t\t\t\t// Show Mythicals\r\n\t\t\t} else if (\r\n\t\t\t\tformat === 'vgc2010' || format === 'vgc2016' || format.startsWith('vgc2019') ||\r\n\t\t\t\tformat === 'vgc2022' || format.endsWith('series10') || format.endsWith('series11')\r\n\t\t\t) {\r\n\t\t\t\ttierSet = tierSet.slice(slices[\"Restricted Legendary\"]);\r\n\t\t\t} else {\r\n\t\t\t\ttierSet = tierSet.slice(slices.Regular);\r\n\t\t\t}\r\n\t\t} else if (format === 'ou') tierSet = tierSet.slice(slices.OU);\r\n\t\telse if (format === 'uu') tierSet = tierSet.slice(slices.UU);\r\n\t\telse if (format === 'ru') tierSet = tierSet.slice(slices.RU || slices.UU);\r\n\t\telse if (format === 'nu') tierSet = tierSet.slice(slices.NU || slices.RU || slices.UU);\r\n\t\telse if (format === 'pu') tierSet = tierSet.slice(slices.PU || slices.NU);\r\n\t\telse if (format === 'zu') tierSet = tierSet.slice(slices.ZU || slices.PU || slices.NU);\r\n\t\telse if (format === 'lc' || format === 'lcuu' || format.startsWith('lc') || (format !== 'caplc' && format.endsWith('lc'))) tierSet = tierSet.slice(slices.LC);\r\n\t\telse if (format === 'cap') tierSet = tierSet.slice(0, slices.AG || slices.Uber).concat(tierSet.slice(slices.OU));\r\n\t\telse if (format === 'caplc') {\r\n\t\t\ttierSet = tierSet.slice(slices['CAP LC'], slices.AG || slices.Uber).concat(tierSet.slice(slices.LC));\r\n\t\t} else if (format === 'anythinggoes' || format.endsWith('ag') || format.startsWith('ag')) {\r\n\t\t\ttierSet = tierSet.slice(slices.AG);\r\n\t\t} else if (isHackmons && (dex.gen < 9 || this.formatType === 'natdex')) {\r\n\t\t\ttierSet = tierSet.slice(slices.AG || slices.Uber);\r\n\t\t} else if (format === 'monotype' || format.startsWith('monothreat')) tierSet = tierSet.slice(slices.Uber);\r\n\t\telse if (format === 'doublesubers') tierSet = tierSet.slice(slices.DUber);\r\n\t\telse if (format === 'doublesou' && dex.gen > 4) tierSet = tierSet.slice(slices.DOU);\r\n\t\telse if (format === 'doublesuu') tierSet = tierSet.slice(slices.DUU);\r\n\t\telse if (format === 'doublesnu') tierSet = tierSet.slice(slices.DNU || slices.DUU);\r\n\t\telse if (this.formatType?.startsWith('bdsp') || this.formatType === 'letsgo' || this.formatType === 'stadium') {\r\n\t\t\ttierSet = tierSet.slice(slices.Uber);\r\n\t\t} else if (!isDoublesOrBS) {\r\n\t\t\ttierSet = [\r\n\t\t\t\t...tierSet.slice(slices.OU, slices.UU),\r\n\t\t\t\t...tierSet.slice(slices.AG, slices.Uber),\r\n\t\t\t\t...tierSet.slice(slices.Uber, slices.OU),\r\n\t\t\t\t...tierSet.slice(slices.UU),\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\ttierSet = [\r\n\t\t\t\t...tierSet.slice(slices.DOU, slices.DUU),\r\n\t\t\t\t...tierSet.slice(slices.DUber, slices.DOU),\r\n\t\t\t\t...tierSet.slice(slices.DUU),\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tif (dex.gen >= 5) {\r\n\t\t\tif (format === 'zu' && table.zuBans) {\r\n\t\t\t\ttierSet = tierSet.filter(([type, id]) => {\r\n\t\t\t\t\tif (id in table.zuBans) return false;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif ((format === 'monotype' || format.startsWith('monothreat')) && table.monotypeBans) {\r\n\t\t\t\ttierSet = tierSet.filter(([type, id]) => {\r\n\t\t\t\t\tif (id in table.monotypeBans) return false;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.mod && !table.customTierSet) {\r\n\t\t\ttable.customTierSet = table.customTiers.map((r: any) => {\r\n\t\t\t\tif (typeof r === 'string') return ['pokemon', r];\r\n\t\t\t\treturn [r[0], r[1]];\r\n\t\t\t});\r\n\t\t\ttable.customTiers = null;\r\n\t\t}\r\n\t\tlet customTierSet: SearchRow[] = table.customTierSet;\r\n\t\tif (customTierSet) {\r\n\t\t\ttierSet = customTierSet.concat(tierSet);\r\n\t\t\tif (modFormatTable.bans.length > 0 && !modFormatTable.bans.includes(\"All Pokemon\")) {\r\n\t\t\t\ttierSet = tierSet.filter(([type, id]) => {\r\n\t\t\t\t\tlet banned = modFormatTable.bans;\r\n\t\t\t\t\treturn !(banned.includes(id));\r\n\t\t\t\t});\r\n\t\t\t} else if (modFormatTable.unbans.length > 0 && modFormatTable.bans.includes(\"All Pokemon\")) {\r\n\t\t\t\ttierSet = tierSet.filter(([type, id]) => {\r\n\t\t\t\t\tlet unbanned = modFormatTable.unbans;\r\n\t\t\t\t\treturn (unbanned.includes(id) || type === 'header');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tlet headerCount = 0;\r\n\t\t\tlet lastHeader = '';\r\n\t\t\tconst emptyHeaders: string[] = [];\r\n\t\t\tfor (const i in tierSet) {\r\n\t\t\t\theaderCount = tierSet[i][0] === 'header' ? headerCount + 1 : 0;\r\n\t\t\t\tif (headerCount > 1) emptyHeaders.push(lastHeader);\r\n\t\t\t\tif (headerCount > 0) lastHeader = tierSet[i][1];\r\n\t\t\t}\r\n\t\t\tif (headerCount === 1) emptyHeaders.push(lastHeader);\r\n\t\t\ttierSet = tierSet.filter(([type, id]) => {\r\n\t\t\t\treturn (type !== 'header' || !emptyHeaders.includes(id));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Filter out Gmax Pokemon from standard tier selection\r\n\t\tif (!/^(battlestadium|vgc|doublesubers)/g.test(format)) {\r\n\t\t\ttierSet = tierSet.filter(([type, id]) => {\r\n\t\t\t\tif (type === 'header' && id === 'DUber by technicality') return false;\r\n\t\t\t\tif (type === 'pokemon') return !id.endsWith('gmax');\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn tierSet;\r\n\t}\r\n\tfilter(row: SearchRow, filters: string[][]) {\r\n\t\tif (!filters) return true;\r\n\t\tif (row[0] !== 'pokemon') return true;\r\n\t\tconst species = this.dex.species.get(row[1]);\r\n\t\tfor (const [filterType, value] of filters) {\r\n\t\t\tswitch (filterType) {\r\n\t\t\tcase 'type':\r\n\t\t\t\tif (species.types[0] !== value && species.types[1] !== value) return false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'egggroup':\r\n\t\t\t\tif (species.eggGroups[0] !== value && species.eggGroups[1] !== value) return false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'tier':\r\n\t\t\t\tif (this.getTier(species) !== value) return false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ability':\r\n\t\t\t\tif (!Dex.hasAbility(species, value)) return false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'move':\r\n\t\t\t\tif (!this.canLearn(species.id, value as ID)) return false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tsort(results: SearchRow[], sortCol: string, reverseSort?: boolean) {\r\n\t\tconst sortOrder = reverseSort ? -1 : 1;\r\n\t\tconst table = !this.mod ? '' : BattleTeambuilderTable[this.mod].overrideDexInfo;\r\n\t\tif (['hp', 'atk', 'def', 'spa', 'spd', 'spe'].includes(sortCol)) {\r\n\t\t\treturn results.sort(([rowType1, id1], [rowType2, id2]) => {\r\n\t\t\t\tlet pokedex1 = BattlePokedex;\r\n\t\t\t\tlet pokedex2 = BattlePokedex;\r\n\t\t\t\tif (this.mod) {\r\n\t\t\t\t\tif (table[id1] && table[id1].baseStats) pokedex1 = table;\r\n\t\t\t\t\tif (table[id2] && table[id2].baseStats) pokedex2 = table;\r\n\t\t\t\t}\r\n\t\t\t\tconst stat1 = this.dex.species.get(id1).baseStats[sortCol as StatName];\r\n\t\t\t\tconst stat2 = this.dex.species.get(id2).baseStats[sortCol as StatName];\r\n\t\t\t\treturn (stat2 - stat1) * sortOrder;\r\n\t\t\t});\r\n\t\t} else if (sortCol === 'bst') {\r\n\t\t\treturn results.sort(([rowType1, id1], [rowType2, id2]) => {\r\n\t\t\t\tlet pokedex1 = BattlePokedex;\r\n\t\t\t\tlet pokedex2 = BattlePokedex;\r\n\t\t\t\tif (this.mod) {\r\n\t\t\t\t\tif (table[id1] && table[id1].baseStats) pokedex1 = table;\r\n\t\t\t\t\tif (table[id2] && table[id2].baseStats) pokedex2 = table;\r\n\t\t\t\t}\r\n\t\t\t\tconst base1 = this.dex.species.get(id1).baseStats;\r\n\t\t\t\tconst base2 = this.dex.species.get(id2).baseStats;\r\n\t\t\t\tconst bst1 = base1.hp + base1.atk + base1.def + base1.spa + base1.spd + base1.spe;\r\n\t\t\t\tconst bst2 = base2.hp + base2.atk + base2.def + base2.spa + base2.spd + base2.spe;\r\n\t\t\t\treturn (bst2 - bst1) * sortOrder;\r\n\t\t\t});\r\n\t\t} else if (sortCol === 'name') {\r\n\t\t\treturn results.sort(([rowType1, id1], [rowType2, id2]) => {\r\n\t\t\t\tconst name1 = id1;\r\n\t\t\t\tconst name2 = id2;\r\n\t\t\t\treturn (name1 < name2 ? -1 : name1 > name2 ? 1 : 0) * sortOrder;\r\n\t\t\t});\r\n\t\t}\r\n\t\tthrow new Error(\"invalid sortcol\");\r\n\t}\r\n}\r\n\r\nclass BattleAbilitySearch extends BattleTypedSearch<'ability'> {\r\n\tgetTable() {\r\n\t\tif (!this.mod) return BattleAbilities;\r\n\t\telse return {...BattleTeambuilderTable[this.mod].fullAbilityName, ...BattleAbilities};\r\n\t\t}\r\n\tgetDefaultResults(): SearchRow[] {\r\n\t\tconst results: SearchRow[] = [];\r\n\t\tfor (let id in BattleAbilities) {\r\n\t\t\tresults.push(['ability', id as ID]);\r\n\t\t}\r\n\t\treturn results;\r\n\t}\r\n\tgetBaseResults() {\r\n\t\tif (!this.species) return this.getDefaultResults();\r\n\t\tconst format = this.format;\r\n\t\tconst isHackmons = (format.includes('hackmons') || format.endsWith('bh'));\r\n\t\tconst isAAA = (format === 'almostanyability' || format.includes('aaa'));\r\n\t\tconst dex = this.dex;\r\n\t\tlet species = dex.species.get(this.species);\r\n\t\tlet abilitySet: SearchRow[] = [['header', \"Abilities\"]];\r\n\r\n\t\tif (species.isMega) {\r\n\t\t\tabilitySet.unshift(['html', `Will be <strong>${species.abilities['0']}</strong> after Mega Evolving.`]);\r\n\t\t\tspecies = dex.species.get(species.baseSpecies);\r\n\t\t}\r\n\t\tabilitySet.push(['ability', toID(species.abilities['0'])]);\r\n\t\tif (species.abilities['1']) {\r\n\t\t\tabilitySet.push(['ability', toID(species.abilities['1'])]);\r\n\t\t}\r\n\t\tif (species.abilities['H']) {\r\n\t\t\tabilitySet.push(['header', \"Hidden Ability\"]);\r\n\t\t\tabilitySet.push(['ability', toID(species.abilities['H'])]);\r\n\t\t}\r\n\t\tif (species.abilities['S']) {\r\n\t\t\tabilitySet.push(['header', \"Special Event Ability\"]);\r\n\t\t\tabilitySet.push(['ability', toID(species.abilities['S'])]);\r\n\t\t}\r\n\t\tif (isAAA || format.includes('metronomebattle') || isHackmons) {\r\n\t\t\tlet abilities: ID[] = [];\r\n\t\t\tfor (let i in this.getTable()) {\r\n\t\t\t\tconst ability = dex.abilities.get(i);\r\n\t\t\t\tif (ability.isNonstandard) continue;\r\n\t\t\t\tif (ability.gen > dex.gen) continue;\r\n\t\t\t\tabilities.push(ability.id);\r\n\t\t\t}\r\n\r\n\t\t\tlet goodAbilities: SearchRow[] = [['header', \"Abilities\"]];\r\n\t\t\tlet poorAbilities: SearchRow[] = [['header', \"Situational Abilities\"]];\r\n\t\t\tlet badAbilities: SearchRow[] = [['header', \"Unviable Abilities\"]];\r\n\t\t\tfor (const ability of abilities.sort().map(abil => dex.abilities.get(abil))) {\r\n\t\t\t\tlet rating = ability.rating;\r\n\t\t\t\tif (ability.id === 'normalize') rating = 3;\r\n\t\t\t\tif (rating >= 3) {\r\n\t\t\t\t\tgoodAbilities.push(['ability', ability.id]);\r\n\t\t\t\t} else if (rating >= 2) {\r\n\t\t\t\t\tpoorAbilities.push(['ability', ability.id]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbadAbilities.push(['ability', ability.id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tabilitySet = [...goodAbilities, ...poorAbilities, ...badAbilities];\r\n\t\t\tif (species.isMega) {\r\n\t\t\t\tif (isAAA) {\r\n\t\t\t\t\tabilitySet.unshift(['html', `Will be <strong>${species.abilities['0']}</strong> after Mega Evolving.`]);\r\n\t\t\t\t}\r\n\t\t\t\t// species is unused after this, so no need to replace\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn abilitySet;\r\n\t}\r\n\tfilter(row: SearchRow, filters: string[][]) {\r\n\t\tif (!filters) return true;\r\n\t\tif (row[0] !== 'ability') return true;\r\n\t\tconst ability = this.dex.abilities.get(row[1]);\r\n\t\tfor (const [filterType, value] of filters) {\r\n\t\t\tswitch (filterType) {\r\n\t\t\tcase 'pokemon':\r\n\t\t\t\tif (!Dex.hasAbility(this.dex.species.get(value), ability.name)) return false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tsort(results: SearchRow[], sortCol: string | null, reverseSort?: boolean): SearchRow[] {\r\n\t\tthrow new Error(\"invalid sortcol\");\r\n\t}\r\n}\r\n\r\nclass BattleItemSearch extends BattleTypedSearch<'item'> {\r\n\tgetTable() {\r\n\t\tif (!this.mod) return BattleItems;\r\n\t\telse return {...BattleTeambuilderTable[this.mod].overrideItemInfo, ...BattleItems};\r\n\t}\r\n\tgetDefaultResults(): SearchRow[] {\r\n\t\tlet table = BattleTeambuilderTable;\r\n\t\tif (this.mod) {\r\n\t\t\ttable = table[this.mod];\r\n\t\t} else if (this.formatType?.startsWith('bdsp')) {\r\n\t\t\ttable = table['gen8bdsp'];\r\n\t\t} else if (this.formatType === 'natdex') {\r\n\t\t\ttable = table['gen' + this.dex.gen + 'natdex'];\r\n\t\t} else if (this.formatType === 'metronome') {\r\n\t\t\ttable = table['gen' + this.dex.gen + 'metronome'];\r\n\t\t} else if (this.dex.gen < 9) {\r\n\t\t\ttable = table['gen' + this.dex.gen];\r\n\t\t}\r\n\t\tif (!table.itemSet) {\r\n\t\t\ttable.itemSet = table.items.map((r: any) => {\r\n\t\t\t\tif (typeof r === 'string') {\r\n\t\t\t\t\treturn ['item', r];\r\n\t\t\t\t}\r\n\t\t\t\treturn [r[0], r[1]];\r\n\t\t\t});\r\n\t\t\ttable.items = null;\r\n\t\t}\r\n\t\treturn table.itemSet;\r\n\t}\r\n\tgetBaseResults(): SearchRow[] {\r\n\t\tconst results = this.getDefaultResults();\r\n\t\tconst species = this.dex.species.get(this.species);\r\n\t\tconst speciesSpecific: SearchRow[] = [];\r\n\t\tfor (let i = results.length - 1; i > 0; i--) {\r\n\t\t\tconst row = results[i];\r\n\t\t\tif (row[0] !== 'item') continue;\r\n\t\t\tconst id = row[1];\r\n\t\t\tlet item = this.dex.items.get(id);\r\n\t\t\tif (!item.exists || item.isNonstandard){\r\n\t\t\t\tif(item.isNonstandard != \"Past\" || this.formatType != \"natdex\"){\r\n\t\t\t\t\tresults.splice(i, 1);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (item.itemUser?.includes(species.name)) {\r\n\t\t\t\tspeciesSpecific.push(row);\r\n\t\t\t}\r\n\t\t\tif(id === 'boosterenergy' && species.tags?.includes('Paradox')) {\r\n\t\t\t\tspeciesSpecific.push(row);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (speciesSpecific.length) {\r\n\t\t\treturn [\r\n\t\t\t\t['header', \"Specific to \" + species.name],\r\n\t\t\t\t...speciesSpecific,\r\n\t\t\t\t...results,\r\n\t\t\t];\r\n\t\t}\r\n\t\treturn results;\r\n\t}\r\n\tfilter(row: SearchRow, filters: string[][]) {\r\n\t\tif (!filters) return true;\r\n\t\tif (row[0] !== 'ability') return true;\r\n\t\tconst ability = this.dex.abilities.get(row[1]);\r\n\t\tfor (const [filterType, value] of filters) {\r\n\t\t\tswitch (filterType) {\r\n\t\t\tcase 'pokemon':\r\n\t\t\t\tif (!Dex.hasAbility(this.dex.species.get(value), ability.name)) return false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tsort(results: SearchRow[], sortCol: string | null, reverseSort?: boolean): SearchRow[] {\r\n\t\tthrow new Error(\"invalid sortcol\");\r\n\t}\r\n}\r\n\r\nclass BattleMoveSearch extends BattleTypedSearch<'move'> {\r\n\tsortRow: SearchRow = ['sortmove', ''];\r\n\tgetTable() {\r\n\t\tif (!this.mod) return BattleMovedex;\r\n\t\telse return {...BattleTeambuilderTable[this.mod].overrideMoveInfo, ...BattleMovedex};\r\n\t}\r\n\tgetDefaultResults(): SearchRow[] {\r\n\t\tlet results: SearchRow[] = [];\r\n\t\tresults.push(['header', \"Moves\"]);\r\n\t\tfor (let id in this.getTable()) {\r\n\t\t\tswitch (id) {\r\n\t\t\tcase 'paleowave':\r\n\t\t\t\tresults.push(['header', \"CAP moves\"]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'magikarpsrevenge':\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tresults.push(['move', id as ID]);\r\n\t\t}\r\n\t\treturn results;\r\n\t}\r\n\tprivate moveIsNotUseless(id: ID, species: Species, moves: string[], set: PokemonSet | null) {\r\n\t\tconst dex = this.dex;\r\n\r\n\t\tlet abilityid: ID = set ? toID(set.ability) : '' as ID;\r\n\t\tconst itemid: ID = set ? toID(set.item) : '' as ID;\r\n\t\t\r\n\t\t// Check if mod declared forced viability\r\n\t\tif (this.mod && id in BattleTeambuilderTable[this.mod].overrideMoveInfo) {\r\n\t\t\tif(BattleTeambuilderTable[this.mod].overrideMoveInfo[id].viable === true) return true;\r\n\t\t\tif(BattleTeambuilderTable[this.mod].overrideMoveInfo[id].viable === false) return false;\r\n\t\t}\r\n\r\n\t\tif (dex.gen === 1) {\r\n\t\t\t// Usually not useless for Gen 1\r\n\t\t\tif ([\r\n\t\t\t\t'acidarmor', 'amnesia', 'barrier', 'bind', 'blizzard', 'clamp', 'confuseray', 'counter', 'firespin', 'growth', 'headbutt', 'hyperbeam', 'mirrormove', 'pinmissile', 'razorleaf', 'sing', 'slash', 'sludge', 'twineedle', 'wrap',\r\n\t\t\t].includes(id)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Usually useless for Gen 1\r\n\t\t\tif ([\r\n\t\t\t\t'disable', 'haze', 'leechseed', 'quickattack', 'roar', 'thunder', 'toxic', 'triattack', 'waterfall', 'whirlwind',\r\n\t\t\t].includes(id)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Not useless only when certain moves aren't present\r\n\t\t\tswitch (id) {\r\n\t\t\tcase 'bubblebeam': return (!moves.includes('surf') && !moves.includes('blizzard'));\r\n\t\t\tcase 'doubleedge': return !moves.includes('bodyslam');\r\n\t\t\tcase 'doublekick': return !moves.includes('submission');\r\n\t\t\tcase 'firepunch': return !moves.includes('fireblast');\r\n\t\t\tcase 'megadrain': return !moves.includes('razorleaf') && !moves.includes('surf');\r\n\t\t\tcase 'megakick': return !moves.includes('hyperbeam');\r\n\t\t\tcase 'reflect': return !moves.includes('barrier') && !moves.includes('acidarmor');\r\n\t\t\tcase 'stomp': return !moves.includes('headbutt');\r\n\t\t\tcase 'submission': return !moves.includes('highjumpkick');\r\n\t\t\tcase 'thunderpunch': return !moves.includes('thunderbolt');\r\n\t\t\tcase 'triattack': return !moves.includes('bodyslam');\r\n\t\t\t}\r\n\t\t\t// Useful and Useless moves for Stadium OU, which changes many game mechanics.\r\n\t\t\tif (this.formatType === 'stadium') {\r\n\t\t\t\tif (['doubleedge', 'focusenergy', 'haze'].includes(id)) return true;\r\n\t\t\t\tif (['hyperbeam', 'sing', 'hypnosis'].includes(id)) return false;\r\n\t\t\t\tswitch (id) {\r\n\t\t\t\tcase 'fly': return !moves.includes('drillpeck');\r\n\t\t\t\tcase 'dig': return !moves.includes('earthquake');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// KEP Integrations. This acts as a \"correctional\" patch.\r\n\t\t\tif (this.mod === 'gen1expansionpack') {\r\n\t\t\t\tif (['bulletpunch', 'irondefense', 'ironhead', 'metalsound', 'drainingkiss', 'charm'].includes(id)) return true;\r\n\t\t\t\tif (['magnetbomb', 'disarmingvoice', 'brutalswing'].includes(id)) return false;\r\n\t\t\t\tswitch (id) {\r\n\t\t\t\t\t// steel hierarchy\r\n\t\t\t\t\tcase 'smartstrike': return !moves.includes('ironhead');\r\n\t\t\t\t\tcase 'magnetbomb': return !moves.includes('ironhead') && !moves.includes('smartstrike');\r\n\t\t\t\t\tcase 'mirrorshot': return !moves.includes('ironhead') && !moves.includes('smartstrike') && !moves.includes('magnetbomb');\r\n\t\t\t\t\t// dark hierarchy\r\n\t\t\t\t\tcase 'kowtowcleave': return !moves.includes('nightslash');\r\n\t\t\t\t\tcase 'falsesurrender': return !moves.includes('kowtowcleave') && !moves.includes('nightslash');\r\n\t\t\t\t\tcase 'feintattack': return !moves.includes('kowtowcleave') && !moves.includes('falsesurrender') && !moves.includes('nightslash');\r\n\t\t\t\t\tcase 'brutalswing': return !moves.includes('kowtowcleave') && !moves.includes('falsesurrender') && !moves.includes('nightslash') && !moves.includes('feintattack');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.formatType === 'letsgo') {\r\n\t\t\tif (['megadrain', 'teleport'].includes(id)) return true;\r\n\t\t}\r\n\r\n\t\tif (this.formatType === 'metronome') {\r\n\t\t\tif (id === 'metronome') return true;\r\n\t\t}\r\n\r\n\t\tif (itemid === 'pidgeotite') abilityid = 'noguard' as ID;\r\n\t\tif (itemid === 'blastoisinite') abilityid = 'megalauncher' as ID;\r\n\t\tif (itemid === 'heracronite') abilityid = 'skilllink' as ID;\r\n\t\tif (itemid === 'cameruptite') abilityid = 'sheerforce' as ID;\r\n\t\tif (itemid === 'aerodactylite' || itemid === 'charizardmegax') abilityid = 'toughclaws' as ID;\r\n\t\tif (itemid === 'glalitite') abilityid = 'refrigerate' as ID;\r\n\r\n\t\tswitch (id) {\r\n\t\tcase 'fakeout': case 'flamecharge': case 'nuzzle': case 'poweruppunch':\r\n\t\t\treturn abilityid !== 'sheerforce';\r\n\t\tcase 'solarbeam': case 'solarblade':\r\n\t\t\treturn ['desolateland', 'drought', 'chlorophyll', 'orichalcumpulse'].includes(abilityid) || itemid === 'powerherb';\r\n\t\tcase 'dynamicpunch': case 'grasswhistle': case 'inferno': case 'sing': case 'zapcannon':\r\n\t\t\treturn abilityid === 'noguard';\r\n\t\tcase 'heatcrash': case 'heavyslam':\r\n\t\t\treturn species.weightkg >= (species.evos ? 75 : 130);\r\n\r\n\t\tcase 'aerialace':\r\n\t\t\treturn ['technician', 'toughclaws'].includes(abilityid) && !moves.includes('bravebird');\r\n\t\tcase 'ancientpower':\r\n\t\t\treturn ['serenegrace', 'technician'].includes(abilityid) || !moves.includes('powergem');\r\n\t\tcase 'aquajet':\r\n\t\t\treturn !moves.includes('jetpunch');\r\n\t\tcase 'aurawheel':\r\n\t\t\treturn species.baseSpecies === 'Morpeko';\r\n\t\tcase 'axekick':\r\n\t\t\treturn !moves.includes('highjumpkick');\r\n\t\tcase 'bellydrum':\r\n\t\t\treturn moves.includes('aquajet') || moves.includes('jetpunch') || moves.includes('extremespeed') ||\r\n\t\t\t\t['iceface', 'unburden'].includes(abilityid);\r\n\t\tcase 'bulletseed':\r\n\t\t\treturn ['skilllink', 'technician'].includes(abilityid);\r\n\t\tcase 'chillingwater':\r\n\t\t\treturn !moves.includes('scald');\r\n\t\tcase 'counter':\r\n\t\t\treturn species.baseStats.hp >= 65;\r\n\t\tcase 'darkvoid':\r\n\t\t\treturn dex.gen < 7;\r\n\t\tcase 'dualwingbeat':\r\n\t\t\treturn abilityid === 'technician' || !moves.includes('drillpeck');\r\n\t\tcase 'feint':\r\n\t\t\treturn abilityid === 'refrigerate';\r\n\t\tcase 'grassyglide':\r\n\t\t\treturn abilityid === 'grassysurge';\r\n\t\tcase 'gyroball':\r\n\t\t\treturn species.baseStats.spe <= 60;\r\n\t\tcase 'headbutt':\r\n\t\t\treturn abilityid === 'serenegrace';\r\n\t\tcase 'hex':\r\n\t\t\treturn !moves.includes('infernalparade');\r\n\t\tcase 'hiddenpowerelectric':\r\n\t\t\treturn !(moves.includes('thunderbolt') || (dex.gen < 4 && moves.includes('thunderpunch')));\r\n\t\tcase 'hiddenpowerfighting':\r\n\t\t\treturn !(moves.includes('aurasphere') || moves.includes('focusblast') || (dex.gen < 4 && moves.includes('brickbreak')));\r\n\t\tcase 'hiddenpowerfire':\r\n\t\t\treturn !(moves.includes('flamethrower') || moves.includes('mysticalfire') || (dex.gen < 4 && moves.includes('firepunch')));\r\n\t\tcase 'hiddenpowergrass':\r\n\t\t\treturn !(moves.includes('energyball') || moves.includes('grassknot') || moves.includes('gigadrain'));\r\n\t\tcase 'hiddenpowerice':\r\n\t\t\treturn !(moves.includes('icebeam') || (dex.gen > 5 && (moves.includes('aurorabeam') || moves.includes('glaciate'))) || (dex.gen < 4 && moves.includes('icepunch')));\r\n\t\tcase 'hiddenpowerflying':\r\n\t\t\treturn dex.gen < 4 && !moves.includes('drillpeck');\r\n\t\tcase 'hiddenpowerbug':\r\n\t\t\treturn dex.gen < 4 && !moves.includes('megahorn');\r\n\t\tcase 'hiddenpowerpsychic':\r\n\t\t\treturn species.baseSpecies === 'Unown';\r\n\t\tcase 'hyperspacefury':\r\n\t\t\treturn species.id === 'hoopaunbound';\r\n\t\tcase 'hypnosis':\r\n\t\t\treturn (dex.gen < 4 && !moves.includes('sleeppowder')) || (dex.gen > 6 && abilityid === 'baddreams');\r\n\t\tcase 'icepunch':\r\n\t\t\treturn !moves.includes('icespinner') || ['sheerforce', 'ironfist'].includes(abilityid) || itemid === 'punchingglove';\r\n\t\tcase 'iciclecrash':\r\n\t\t\treturn !moves.includes('mountaingale');\r\n\t\tcase 'icywind':\r\n\t\t\t// Keldeo needs Hidden Power for Electric/Ghost\r\n\t\t\treturn species.baseSpecies === 'Keldeo' || this.formatType === 'doubles';\r\n\t\tcase 'infestation':\r\n\t\t\treturn moves.includes('stickyweb');\r\n\t\tcase 'irondefense':\r\n\t\t\treturn !moves.includes('acidarmor');\r\n\t\tcase 'irontail':\r\n\t\t\treturn dex.gen > 5 && !moves.includes('ironhead') && !moves.includes('gunkshot') && !moves.includes('poisonjab');\r\n\t\tcase 'jumpkick':\r\n\t\t\treturn !moves.includes('highjumpkick') && !moves.includes('axekick');\r\n\t\tcase 'lastresort':\r\n\t\t\treturn set && set.moves.length < 3;\r\n\t\tcase 'leechlife':\r\n\t\t\treturn dex.gen > 6;\r\n\t\tcase 'mysticalfire':\r\n\t\t\treturn dex.gen > 6 && !moves.includes('flamethrower');\r\n\t\tcase 'naturepower':\r\n\t\t\treturn dex.gen === 5;\r\n\t\tcase 'nightslash':\r\n\t\t\treturn !moves.includes('crunch') && !(moves.includes('knockoff') && dex.gen >= 6);\r\n\t\tcase 'outrage':\r\n\t\t\treturn !moves.includes('glaiverush');\r\n\t\tcase 'petaldance':\r\n\t\t\treturn abilityid === 'owntempo';\r\n\t\tcase 'phantomforce':\r\n\t\t\treturn !(moves.includes('shadowforce') || moves.includes('poltergeist') || moves.includes('shadowclaw')) || this.formatType === 'doubles';\r\n\t\tcase 'poisonfang':\r\n\t\t\treturn species.types.includes('Poison') && !moves.includes('gunkshot') && !moves.includes('poisonjab');\r\n\t\tcase 'relicsong':\r\n\t\t\treturn species.id === 'meloetta';\r\n\t\tcase 'refresh':\r\n\t\t\treturn !moves.includes('aromatherapy') && !moves.includes('healbell');\r\n\t\tcase 'risingvoltage':\r\n\t\t\treturn abilityid === 'electricsurge' || abilityid === 'hadronengine';\r\n\t\tcase 'rocktomb':\r\n\t\t\treturn abilityid === 'technician';\r\n\t\tcase 'selfdestruct':\r\n\t\t\treturn dex.gen < 5 && !moves.includes('explosion');\r\n\t\tcase 'shadowpunch':\r\n\t\t\treturn abilityid === 'ironfist' && !moves.includes('ragefist');\r\n\t\tcase 'shelter':\r\n\t\t\treturn !moves.includes('acidarmor') && !moves.includes('irondefense');\r\n\t\tcase 'smackdown':\r\n\t\t\treturn species.types.includes('Ground');\r\n\t\tcase 'smartstrike':\r\n\t\t\treturn species.types.includes('Steel') && !moves.includes('ironhead');\r\n\t\tcase 'soak':\r\n\t\t\treturn abilityid === 'unaware';\r\n\t\tcase 'steelwing':\r\n\t\t\treturn !moves.includes('ironhead');\r\n\t\tcase 'stompingtantrum':\r\n\t\t\treturn (!moves.includes('earthquake') && !moves.includes('drillrun')) || this.formatType === 'doubles';\r\n\t\tcase 'stunspore':\r\n\t\t\treturn !moves.includes('thunderwave');\r\n\t\tcase 'technoblast':\r\n\t\t\treturn dex.gen > 5 && itemid.endsWith('drive') || itemid === 'dousedrive';\r\n\t\tcase 'teleport':\r\n\t\t\treturn dex.gen > 7;\r\n\t\tcase 'terrainpulse': case 'waterpulse':\r\n\t\t\treturn ['megalauncher', 'technician'].includes(abilityid) && !moves.includes('originpulse');\r\n\t\tcase 'toxicspikes':\r\n\t\t\treturn abilityid !== 'toxicdebris';\r\n\t\tcase 'trickroom':\r\n\t\t\treturn species.baseStats.spe <= 100;\r\n\t\t}\r\n\r\n\t\tif (this.formatType === 'doubles' && BattleMoveSearch.GOOD_DOUBLES_MOVES.includes(id)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tconst moveData = BattleMovedex[id];\r\n\t\tif (!moveData) return true;\r\n\t\tif (moveData.category === 'Status') {\r\n\t\t\treturn BattleMoveSearch.GOOD_STATUS_MOVES.includes(id);\r\n\t\t}\r\n\t\tif (moveData.flags?.charge) {\r\n\t\t\treturn itemid === 'powerherb';\r\n\t\t}\r\n\t\tif (moveData.flags?.recharge) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (moveData.flags?.slicing && abilityid === 'sharpness') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (moveData.basePower < 75) {\r\n\t\t\treturn BattleMoveSearch.GOOD_WEAK_MOVES.includes(id);\r\n\t\t}\r\n\t\treturn !BattleMoveSearch.BAD_STRONG_MOVES.includes(id);\r\n\t}\r\n\tstatic readonly GOOD_STATUS_MOVES = [\r\n\t\t'acidarmor', 'agility', 'aromatherapy', 'auroraveil', 'autotomize', 'banefulbunker', 'batonpass', 'bellydrum', 'bulkup', 'calmmind', 'chillyreception', 'clangoroussoul', 'coil', 'cottonguard', 'courtchange', 'curse', 'defog', 'destinybond', 'detect', 'disable', 'dragondance', 'encore', 'extremeevoboost', 'filletaway', 'geomancy', 'glare', 'haze', 'healbell', 'healingwish', 'healorder', 'heartswap', 'honeclaws', 'kingsshield', 'leechseed', 'lightscreen', 'lovelykiss', 'lunardance', 'magiccoat', 'maxguard', 'memento', 'milkdrink', 'moonlight', 'morningsun', 'nastyplot', 'naturesmadness', 'noretreat', 'obstruct', 'painsplit', 'partingshot', 'perishsong', 'protect', 'quiverdance', 'recover', 'reflect', 'reflecttype', 'rest', 'revivalblessing', 'roar', 'rockpolish', 'roost', 'shedtail', 'shellsmash', 'shiftgear', 'shoreup', 'silktrap', 'slackoff', 'sleeppowder', 'sleeptalk', 'softboiled', 'spikes', 'spikyshield', 'spore', 'stealthrock', 'stickyweb', 'strengthsap', 'substitute', 'switcheroo', 'swordsdance', 'synthesis', 'tailglow', 'tailwind', 'taunt', 'thunderwave', 'tidyup', 'toxic', 'transform', 'trick', 'victorydance', 'whirlwind', 'willowisp', 'wish', 'yawn',\r\n\t] as ID[] as readonly ID[];\r\n\tstatic readonly GOOD_WEAK_MOVES = [\r\n\t\t'accelerock', 'acrobatics', 'aquacutter', 'avalanche', 'barbbarrage', 'bonemerang', 'bouncybubble', 'bulletpunch', 'buzzybuzz', 'ceaselessedge', 'circlethrow', 'clearsmog', 'doubleironbash', 'dragondarts', 'dragontail', 'drainingkiss', 'endeavor', 'facade', 'firefang', 'flipturn', 'flowertrick', 'freezedry', 'frustration', 'geargrind', 'grassknot', 'gyroball', 'icefang', 'iceshard', 'iciclespear', 'infernalparade', 'jetpunch', 'knockoff', 'lastrespects', 'lowkick', 'machpunch', 'mortalspin', 'mysticalpower', 'naturesmadness', 'nightshade', 'nuzzle', 'pikapapow', 'populationbomb', 'psychocut', 'psyshieldbash', 'pursuit', 'quickattack', 'ragefist', 'rapidspin', 'return', 'rockblast', 'ruination', 'saltcure', 'scorchingsands', 'seismictoss', 'shadowclaw', 'shadowsneak', 'sizzlyslide', 'skydrop', 'stoneaxe', 'storedpower', 'stormthrow', 'suckerpunch', 'superfang', 'surgingstrikes', 'tailslap', 'trailblaze', 'tripleaxel', 'tripledive', 'twinbeam', 'uturn', 'veeveevolley', 'voltswitch', 'watershuriken', 'weatherball',\r\n\t] as ID[] as readonly ID[];\r\n\tstatic readonly BAD_STRONG_MOVES = [\r\n\t\t'belch', 'burnup', 'crushclaw', 'dragonrush', 'dreameater', 'eggbomb', 'firepledge', 'flyingpress', 'grasspledge', 'hyperbeam', 'hyperfang', 'hyperspacehole', 'jawlock', 'landswrath', 'megakick', 'megapunch', 'mistyexplosion', 'muddywater', 'nightdaze', 'pollenpuff', 'rockclimb', 'selfdestruct', 'shelltrap', 'skyuppercut', 'slam', 'strength', 'submission', 'synchronoise', 'takedown', 'thrash', 'uproar', 'waterpledge',\r\n\t] as ID[] as readonly ID[];\r\n\tstatic readonly GOOD_DOUBLES_MOVES = [\r\n\t\t'allyswitch', 'bulldoze', 'coaching', 'electroweb', 'faketears', 'fling', 'followme', 'healpulse', 'helpinghand', 'junglehealing', 'lifedew', 'lunarblessing', 'muddywater', 'pollenpuff', 'psychup', 'ragepowder', 'safeguard', 'skillswap', 'snipeshot', 'wideguard',\r\n\t] as ID[] as readonly ID[];\r\n\tgetBaseResults() {\r\n\t\tif (!this.species) return this.getDefaultResults();\r\n\t\tconst dex = this.dex;\r\n\t\tlet species = dex.species.get(this.species);\r\n\t\tconst format = this.format;\r\n\t\tconst isHackmons = (format.includes('hackmons') || format.endsWith('bh'));\r\n\t\tconst isSTABmons = (format.includes('stabmons') || format.includes('stylemons')|| format === 'staaabmons');\r\n\t\tconst isTradebacks = (format.includes('tradebacks') || this.mod === 'gen1expansionpack' || this.mod === 'gen1burgundy');\r\n\t\tconst regionBornLegality = dex.gen >= 6 &&\r\n\t\t(/^battle(spot|stadium|festival)/.test(format) || format.startsWith('vgc') ||\r\n\t\t(dex.gen === 9 && this.formatType !== 'natdex'));\r\n\t\t// Hoenn Gaiden Baton Pass Gaiden Declaration\r\n\t\tconst isHoennGaiden = this.modFormat.endsWith('hoenngaiden');\r\n\t\t\r\n\t\tlet hasOwnUsefulCheck = false;\r\n\t\tswitch(typeof window.ModConfig[this.mod]?.moveIsNotUseless){\r\n\t\t\tcase 'string':\r\n\t\t\t\thasOwnUsefulCheck = true;\r\n\t\t\t\tconst usefulCheck = JSON.parse(window.ModConfig[this.mod].moveIsNotUseless);\r\n\t\t\t\tconst checkParameters = usefulCheck.substring(usefulCheck.indexOf('(')+1,usefulCheck.indexOf(')')).split(',');\r\n\t\t\t\twindow.ModConfig[this.mod].moveIsNotUseless = new Function(...checkParameters, usefulCheck.substring(usefulCheck.indexOf('{')));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'function':\r\n\t\t\t\thasOwnUsefulCheck = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tlet learnsetid = this.firstLearnsetid(species.id);\r\n\t\tlet moves: string[] = [];\r\n\t\tlet sketchMoves: string[] = [];\r\n\t\tlet sketch = false;\r\n\t\tlet gen = '' + dex.gen;\r\n\t\tlet lsetTable = BattleTeambuilderTable;\r\n\t\tif (this.formatType?.startsWith('bdsp')) lsetTable = lsetTable['gen8bdsp'];\r\n\t\tif (this.formatType === 'letsgo') lsetTable = lsetTable['gen7letsgo'];\r\n\t\tif (this.formatType?.startsWith('dlc1')) lsetTable = lsetTable['gen8dlc1'];\r\n\t\tif (this.formatType?.startsWith('predlc')) lsetTable = lsetTable['gen9predlc'];\r\n\t\twhile (learnsetid) {\r\n\t\t\tlet learnset = lsetTable.learnsets[learnsetid];\r\n\t\t\tif (this.mod) {\r\n\t\t\t\tconst overrideLearnsets = BattleTeambuilderTable[this.mod].overrideLearnsets;\r\n\t\t\t\tif (overrideLearnsets[learnsetid]) {\r\n\t\t\t\t\tif(!learnset) learnset = overrideLearnsets[learnsetid]; //Didn't have learnset and mod gave it one\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfor (const moveid in overrideLearnsets[learnsetid]) learnset[moveid] = overrideLearnsets[learnsetid][moveid];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (learnset) {\r\n\t\t\t\tfor (let moveid in learnset) {\r\n\t\t\t\t\tlet learnsetEntry = learnset[moveid];\r\n\t\t\t\t\tconst move = dex.moves.get(moveid);\r\n\t\t\t\t\tconst minGenCode: {[gen: number]: string} = {6: 'p', 7: 'q', 8: 'g', 9: 'a'};\r\n\t\t\t\t\tif (regionBornLegality && !learnsetEntry.includes(minGenCode[dex.gen])) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!learnsetEntry.includes(gen) &&\r\n\t\t\t\t\t\t(!isTradebacks ? true : !(move.gen <= dex.gen && learnsetEntry.includes('' + (dex.gen + 1))))\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.formatType !== 'natdex' && move.isNonstandard === \"Past\") {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.formatType?.startsWith('dlc1') &&\r\n\t\t\t\t\t\tBattleTeambuilderTable['gen8dlc1']?.nonstandardMoves.includes(moveid)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.formatType?.includes('predlc') && this.formatType !== 'predlcnatdex' &&\r\n\t\t\t\t\t\tBattleTeambuilderTable['gen9predlc']?.nonstandardMoves.includes(moveid)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (moves.includes(moveid)) continue;\r\n\t\t\t\t\tmoves.push(moveid);\r\n\t\t\t\t\tif (moveid === 'sketch') sketch = true;\r\n\t\t\t\t\tif (moveid === 'hiddenpower') {\r\n\t\t\t\t\t\tmoves.push(\r\n\t\t\t\t\t\t\t'hiddenpowerbug', 'hiddenpowerdark', 'hiddenpowerdragon', 'hiddenpowerelectric', 'hiddenpowerfighting', 'hiddenpowerfire', 'hiddenpowerflying', 'hiddenpowerghost', 'hiddenpowergrass', 'hiddenpowerground', 'hiddenpowerice', 'hiddenpowerpoison', 'hiddenpowerpsychic', 'hiddenpowerrock', 'hiddenpowersteel', 'hiddenpowerwater'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isHoennGaiden && moveid === 'batonpass') {\r\n\t\t\t\t\t\tmoves.push('batonpassgaiden');\r\n\t\t\t\t\t\tmoves.splice(moves.indexOf('batonpass'), 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlearnsetid = this.nextLearnsetid(learnsetid, species.id);\r\n\t\t}\r\n\t\tif (sketch || isHackmons) {\r\n\t\t\tif (isHackmons) moves = [];\r\n\t\t\tfor (let id in this.getTable()) {\r\n\t\t\t\tif (!format.startsWith('cap') && (id === 'paleowave' || id === 'shadowstrike')) continue;\r\n\t\t\t\tlet move = dex.moves.get(id);\r\n\t\t\t\tif (!move.exists || moves.includes(id) || move.gen > dex.gen) continue;\r\n\t\t\t\tif (sketch) {\r\n\t\t\t\t\tif (move.noSketch || move.isMax || move.isZ) continue;\r\n\t\t\t\t\tif (move.isNonstandard && move.isNonstandard !== 'Past') continue;\r\n\t\t\t\t\tif (move.isNonstandard === 'Past' && this.formatType !== 'natdex') continue;\r\n\t\t\t\t\tsketchMoves.push(id);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!(dex.gen < 8 || this.formatType === 'natdex') && move.isZ) continue;\r\n\t\t\t\t\tif (typeof move.isMax === 'string') continue;\r\n\t\t\t\t\tif (move.isMax && dex.gen > 8) continue;\r\n\t\t\t\t\tif (move.isNonstandard === 'Past' && this.formatType !== 'natdex') continue;\r\n\t\t\t\t\tif (move.isNonstandard === 'LGPE' && this.formatType !== 'letsgo') continue;\r\n\t\t\t\t\tmoves.push(id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.formatType === 'metronome') moves = ['metronome'];\r\n\t\tif (isSTABmons) {\r\n\t\t\tfor (let id in this.getTable()) {\r\n\t\t\t\tconst move = dex.moves.get(id);\r\n\t\t\t\tif (moves.includes(move.id)) continue;\r\n\t\t\t\tif (move.gen > dex.gen) continue;\r\n\t\t\t\tif (move.isZ || move.isMax || (move.isNonstandard && move.isNonstandard !== 'Unobtainable')) continue;\r\n\r\n\t\t\t\tconst speciesTypes: string[] = [];\r\n\t\t\t\tconst moveTypes: string[] = [];\r\n\t\t\t\tfor (let i = dex.gen; i >= species.gen && i >= move.gen; i--) {\r\n\t\t\t\t\tconst genDex = Dex.forGen(i);\r\n\t\t\t\t\tmoveTypes.push(genDex.moves.get(move.name).type);\r\n\r\n\t\t\t\t\tconst pokemon = genDex.species.get(species.name);\r\n\t\t\t\t\tlet baseSpecies = genDex.species.get(pokemon.changesFrom || pokemon.name);\r\n\t\t\t\t\tif (!pokemon.battleOnly) speciesTypes.push(...pokemon.types);\r\n\t\t\t\t\tlet prevo = pokemon.prevo;\r\n\t\t\t\t\twhile (prevo) {\r\n\t\t\t\t\t\tconst prevoSpecies = genDex.species.get(prevo);\r\n\t\t\t\t\t\tspeciesTypes.push(...prevoSpecies.types);\r\n\t\t\t\t\t\tprevo = prevoSpecies.prevo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.battleOnly && typeof pokemon.battleOnly === 'string') {\r\n\t\t\t\t\t\tspecies = dex.species.get(pokemon.battleOnly);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst excludedForme = (s: Species) => [\r\n\t\t\t\t\t\t'Alola', 'Alola-Totem', 'Galar', 'Galar-Zen', 'Hisui', 'Paldea', 'Paldea-Combat', 'Paldea-Blaze', 'Paldea-Aqua',\r\n\t\t\t\t\t].includes(s.forme);\r\n\t\t\t\t\tif (baseSpecies.otherFormes && !['Wormadam', 'Urshifu'].includes(baseSpecies.baseSpecies)) {\r\n\t\t\t\t\t\tif (!excludedForme(species)) speciesTypes.push(...baseSpecies.types);\r\n\t\t\t\t\t\tfor (const formeName of baseSpecies.otherFormes) {\r\n\t\t\t\t\t\t\tconst forme = dex.species.get(formeName);\r\n\t\t\t\t\t\t\tif (!forme.battleOnly && !excludedForme(forme)) speciesTypes.push(...forme.types);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet valid = false;\r\n\t\t\t\tfor (let type of moveTypes) {\r\n\t\t\t\t\tif (speciesTypes.includes(type)) {\r\n\t\t\t\t\t\tvalid = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (valid) moves.push(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmoves.sort();\r\n\t\tsketchMoves.sort();\r\n\r\n\t\tlet usableMoves: SearchRow[] = [];\r\n\t\tlet uselessMoves: SearchRow[] = [];\r\n\t\tfor (const id of moves) {\r\n\t\t\tlet isUsable = this.moveIsNotUseless(id as ID, species, moves, this.set);\r\n\t\t\tif(hasOwnUsefulCheck){\r\n\t\t\t\tconst modIsUsable = window.ModConfig[this.mod].moveIsNotUseless.apply(window.ModConfig[this.mod], [id as ID, species, moves, this.set]);\r\n\t\t\t\tif(typeof modIsUsable === 'boolean' && modIsUsable !== isUsable) isUsable = modIsUsable;\r\n\t\t\t}\r\n\t\t\tif (isUsable) {\r\n\t\t\t\tif (!usableMoves.length) usableMoves.push(['header', \"Moves\"]);\r\n\t\t\t\tusableMoves.push(['move', id as ID]);\r\n\t\t\t} else {\r\n\t\t\t\tif (!uselessMoves.length) uselessMoves.push(['header', \"Usually useless moves\"]);\r\n\t\t\t\tuselessMoves.push(['move', id as ID]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (sketchMoves.length) {\r\n\t\t\tusableMoves.push(['header', \"Sketched moves\"]);\r\n\t\t\tuselessMoves.push(['header', \"Useless sketched moves\"]);\r\n\t\t}\r\n\t\tfor (const id of sketchMoves) {\r\n\t\t\tlet isUsable = this.moveIsNotUseless(id as ID, species, sketchMoves, this.set);\r\n\t\t\tif(hasOwnUsefulCheck){\r\n\t\t\t\tconst modIsUsable = window.ModConfig[this.mod].moveIsNotUseless.apply(window.ModConfig[this.mod], [id as ID, species, moves, this.set]);\r\n\t\t\t\tif(typeof modIsUsable === 'boolean' && modIsUsable !== isUsable) isUsable = modIsUsable;\r\n\t\t\t}\r\n\t\t\tif (isUsable) {\r\n\t\t\t\tusableMoves.push(['move', id as ID]);\r\n\t\t\t} else {\r\n\t\t\t\tuselessMoves.push(['move', id as ID]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [...usableMoves, ...uselessMoves];\r\n\t}\r\n\tfilter(row: SearchRow, filters: string[][]) {\r\n\t\tif (!filters) return true;\r\n\t\tif (row[0] !== 'move') return true;\r\n\t\tconst move = this.dex.moves.get(row[1]);\r\n\t\tfor (const [filterType, value] of filters) {\r\n\t\t\tswitch (filterType) {\r\n\t\t\tcase 'type':\r\n\t\t\t\tif (move.type !== value) return false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'category':\r\n\t\t\t\tif (move.category !== value) return false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pokemon':\r\n\t\t\t\tif (!this.canLearn(value as ID, move.id)) return false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tsort(results: SearchRow[], sortCol: string, reverseSort?: boolean): SearchRow[] {\r\n\t\tconst sortOrder = reverseSort ? -1 : 1;\r\n\t\tswitch (sortCol) {\r\n\t\tcase 'power':\r\n\t\t\tlet powerTable: {[id: string]: number | undefined} = {\r\n\t\t\t\treturn: 102, frustration: 102, spitup: 300, trumpcard: 200, naturalgift: 80, grassknot: 120,\r\n\t\t\t\tlowkick: 120, gyroball: 150, electroball: 150, flail: 200, reversal: 200, present: 120,\r\n\t\t\t\twringout: 120, crushgrip: 120, heatcrash: 120, heavyslam: 120, fling: 130, magnitude: 150,\r\n\t\t\t\tbeatup: 24, punishment: 1020, psywave: 1250, nightshade: 1200, seismictoss: 1200,\r\n\t\t\t\tdragonrage: 1140, sonicboom: 1120, superfang: 1350, endeavor: 1399, sheercold: 1501,\r\n\t\t\t\tfissure: 1500, horndrill: 1500, guillotine: 1500,\r\n\t\t\t};\r\n\t\t\treturn results.sort(([rowType1, id1], [rowType2, id2]) => {\r\n\t\t\t\tlet move1 = this.dex.moves.get(id1);\r\n\t\t\t\tlet move2 = this.dex.moves.get(id2);\r\n\t\t\t\tlet pow1 = move1.basePower || powerTable[id1] || (move1.category === 'Status' ? -1 : 1400);\r\n\t\t\t\tlet pow2 = move2.basePower || powerTable[id2] || (move2.category === 'Status' ? -1 : 1400);\r\n\t\t\t\treturn (pow2 - pow1) * sortOrder;\r\n\t\t\t});\r\n\t\tcase 'accuracy':\r\n\t\t\treturn results.sort(([rowType1, id1], [rowType2, id2]) => {\r\n\t\t\t\tlet accuracy1 = this.dex.moves.get(id1).accuracy || 0;\r\n\t\t\t\tlet accuracy2 = this.dex.moves.get(id2).accuracy || 0;\r\n\t\t\t\tif (accuracy1 === true) accuracy1 = 101;\r\n\t\t\t\tif (accuracy2 === true) accuracy2 = 101;\r\n\t\t\t\treturn (accuracy2 - accuracy1) * sortOrder;\r\n\t\t\t});\r\n\t\tcase 'pp':\r\n\t\t\treturn results.sort(([rowType1, id1], [rowType2, id2]) => {\r\n\t\t\t\tlet pp1 = this.dex.moves.get(id1).pp || 0;\r\n\t\t\t\tlet pp2 = this.dex.moves.get(id2).pp || 0;\r\n\t\t\t\treturn (pp2 - pp1) * sortOrder;\r\n\t\t\t});\r\n\t\tcase 'name':\r\n\t\t\treturn results.sort(([rowType1, id1], [rowType2, id2]) => {\r\n\t\t\t\tconst name1 = id1;\r\n\t\t\t\tconst name2 = id2;\r\n\t\t\t\treturn (name1 < name2 ? -1 : name1 > name2 ? 1 : 0) * sortOrder;\r\n\t\t\t});\r\n\t\t}\r\n\t\tthrow new Error(\"invalid sortcol\");\r\n\t}\r\n}\r\n\r\nclass BattleCategorySearch extends BattleTypedSearch<'category'> {\r\n\tgetTable() {\r\n\t\treturn {physical: 1, special: 1, status: 1};\r\n\t}\r\n\tgetDefaultResults(): SearchRow[] {\r\n\t\treturn [\r\n\t\t\t['category', 'physical' as ID],\r\n\t\t\t['category', 'special' as ID],\r\n\t\t\t['category', 'status' as ID],\r\n\t\t];\r\n\t}\r\n\tgetBaseResults() {\r\n\t\treturn this.getDefaultResults();\r\n\t}\r\n\tfilter(row: SearchRow, filters: string[][]): boolean {\r\n\t\tthrow new Error(\"invalid filter\");\r\n\t}\r\n\tsort(results: SearchRow[], sortCol: string | null, reverseSort?: boolean): SearchRow[] {\r\n\t\tthrow new Error(\"invalid sortcol\");\r\n\t}\r\n}\r\n\r\nclass BattleTypeSearch extends BattleTypedSearch<'type'> {\r\n\tgetTable() {\r\n\t\tif (!this.mod) return window.BattleTypeChart;\r\n\t\telse return {...BattleTeambuilderTable[this.mod].overrideTypeChart, ...window.BattleTypeChart};\r\n\t}\r\n\tgetDefaultResults(): SearchRow[] {\r\n\t\tconst results: SearchRow[] = [];\r\n\t\tfor (let id in window.BattleTypeChart) {\r\n\t\t\tresults.push(['type', id as ID]);\r\n\t\t}\r\n\t\treturn results;\r\n\t}\r\n\tgetBaseResults() {\r\n\t\treturn this.getDefaultResults();\r\n\t}\r\n\tfilter(row: SearchRow, filters: string[][]): boolean {\r\n\t\tthrow new Error(\"invalid filter\");\r\n\t}\r\n\tsort(results: SearchRow[], sortCol: string | null, reverseSort?: boolean): SearchRow[] {\r\n\t\tthrow new Error(\"invalid sortcol\");\r\n\t}\r\n}\r\n"],"mappings":"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"}